{
    "commits": {
        "before": {
            "committer_date": "2025-08-06 21:31:52",
            "commit_id": "a5725965ea2",
            "message": "Remove unnecessary \"# noqa: set_linter\" comments (#159467)"
        },
        "after": {
            "committer_date": "2025-08-06 21:52:14",
            "commit_id": "40c4d61f9ab",
            "message": "[Dynamo][Better Engineering] Typing `torch/_dynamo/guards.py` (#159315)"
        }
    },
    "completenessScore": [0.377095, 0.377095],
    "diff": {
        "commits": [{"name": "11e97bc7bd4~1459"}, {"name": "11e97bc7bd4~1458"}],
        "absolute": {
            "otherSymbolCounts": {
                "withKnownType": 88,
                "withAmbiguousType": 3,
                "withUnknownType": 73
            },
            "missingFunctionDocStringCount": 107,
            "missingClassDocStringCount": 9
        },
        "percent": {
            "otherSymbolCounts": {
                "withKnownType": 3.275027912169706,
                "withAmbiguousType": 2.2900763358778624,
                "withUnknownType": 3.2720753025549083
            },
            "missingFunctionDocStringCount": 2.7261146496815285,
            "missingClassDocStringCount": 0.8302583025830258
        },
        "symbols": {
            "added": [
                "torch._C._dynamo.eval_frame._CacheEntry.compile_id",
                "torch._C._dynamo.eval_frame._CacheEntry.guard_manager",
                "torch._C._dynamo.eval_frame._CacheEntry.update_diff_guard_root_manager",
                "torch._C._dynamo.guards.DictGuardManager",
                "torch._C._dynamo.guards.DictGuardManager.get_key_manager",
                "torch._C._dynamo.guards.DictGuardManager.get_key_value_managers",
                "torch._C._dynamo.guards.DictGuardManager.get_value_manager",
                "torch._C._dynamo.guards.GuardDebugInfo",
                "torch._C._dynamo.guards.GuardDebugInfo.num_guards_executed",
                "torch._C._dynamo.guards.GuardDebugInfo.result",
                "torch._C._dynamo.guards.GuardDebugInfo.verbose_code_parts",
                "torch._C._dynamo.guards.GuardManager",
                "torch._C._dynamo.guards.GuardManager.add_default_device_guard",
                "torch._C._dynamo.guards.GuardManager.add_dict_contains_guard",
                "torch._C._dynamo.guards.GuardManager.add_dict_length_check_guard",
                "torch._C._dynamo.guards.GuardManager.add_dict_version_guard",
                "torch._C._dynamo.guards.GuardManager.add_dispatch_key_set_guard",
                "torch._C._dynamo.guards.GuardManager.add_dynamic_indices_guard",
                "torch._C._dynamo.guards.GuardManager.add_equals_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_false_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_global_state_guard",
                "torch._C._dynamo.guards.GuardManager.add_id_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_lambda_guard",
                "torch._C._dynamo.guards.GuardManager.add_length_check_guard",
                "torch._C._dynamo.guards.GuardManager.add_mapping_keys_guard",
                "torch._C._dynamo.guards.GuardManager.add_no_hasattr_guard",
                "torch._C._dynamo.guards.GuardManager.add_none_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_not_none_guard",
                "torch._C._dynamo.guards.GuardManager.add_range_iterator_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_set_contains_guard",
                "torch._C._dynamo.guards.GuardManager.add_tensor_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_torch_function_mode_stack_guard",
                "torch._C._dynamo.guards.GuardManager.add_true_match_guard",
                "torch._C._dynamo.guards.GuardManager.add_tuple_iterator_length_guard",
                "torch._C._dynamo.guards.GuardManager.add_type_match_guard",
                "torch._C._dynamo.guards.GuardManager.call_function_no_args_manager",
                "torch._C._dynamo.guards.GuardManager.check",
                "torch._C._dynamo.guards.GuardManager.check_verbose",
                "torch._C._dynamo.guards.GuardManager.closure_manager",
                "torch._C._dynamo.guards.GuardManager.code_manager",
                "torch._C._dynamo.guards.GuardManager.dict_getitem_manager",
                "torch._C._dynamo.guards.GuardManager.fail_count",
                "torch._C._dynamo.guards.GuardManager.framelocals_manager",
                "torch._C._dynamo.guards.GuardManager.func_defaults_manager",
                "torch._C._dynamo.guards.GuardManager.func_kwdefaults_manager",
                "torch._C._dynamo.guards.GuardManager.generic_getattr_manager",
                "torch._C._dynamo.guards.GuardManager.get_accessors",
                "torch._C._dynamo.guards.GuardManager.get_child_managers",
                "torch._C._dynamo.guards.GuardManager.get_generic_dict_manager",
                "torch._C._dynamo.guards.GuardManager.get_leaf_guards",
                "torch._C._dynamo.guards.GuardManager.get_root",
                "torch._C._dynamo.guards.GuardManager.get_source",
                "torch._C._dynamo.guards.GuardManager.get_type_of_guarded_value",
                "torch._C._dynamo.guards.GuardManager.getattr_manager",
                "torch._C._dynamo.guards.GuardManager.getitem_manager",
                "torch._C._dynamo.guards.GuardManager.global_weakref_manager",
                "torch._C._dynamo.guards.GuardManager.globals_dict_manager",
                "torch._C._dynamo.guards.GuardManager.grad_manager",
                "torch._C._dynamo.guards.GuardManager.has_no_accessors",
                "torch._C._dynamo.guards.GuardManager.has_object_aliasing_guard",
                "torch._C._dynamo.guards.GuardManager.indexed_manager",
                "torch._C._dynamo.guards.GuardManager.is_guarded_value_immutable",
                "torch._C._dynamo.guards.GuardManager.is_tag_safe",
                "torch._C._dynamo.guards.GuardManager.is_tag_safe_root",
                "torch._C._dynamo.guards.GuardManager.lambda_manager",
                "torch._C._dynamo.guards.GuardManager.list_getitem_manager",
                "torch._C._dynamo.guards.GuardManager.mark_tag_safe",
                "torch._C._dynamo.guards.GuardManager.mark_tag_safe_root",
                "torch._C._dynamo.guards.GuardManager.repr",
                "torch._C._dynamo.guards.GuardManager.set_getitem_manager",
                "torch._C._dynamo.guards.GuardManager.tensor_property_shape_manager",
                "torch._C._dynamo.guards.GuardManager.tensor_property_size_manager",
                "torch._C._dynamo.guards.GuardManager.tensor_property_storage_offset_manager",
                "torch._C._dynamo.guards.GuardManager.tuple_getitem_manager",
                "torch._C._dynamo.guards.GuardManager.tuple_iterator_getitem_manager",
                "torch._C._dynamo.guards.GuardManager.type_dict_manager",
                "torch._C._dynamo.guards.GuardManager.type_manager",
                "torch._C._dynamo.guards.GuardManager.type_mro_manager",
                "torch._C._dynamo.guards.GuardManager.type_of_guarded_value",
                "torch._C._dynamo.guards.GuardManager.weakref_call_manager",
                "torch._C._dynamo.guards.LeafGuard",
                "torch._C._dynamo.guards.LeafGuard.verbose_code_parts",
                "torch._C._dynamo.guards.RootGuardManager",
                "torch._C._dynamo.guards.RootGuardManager.add_epilogue_lambda_guard",
                "torch._C._dynamo.guards.RootGuardManager.attach_compile_id",
                "torch._C._dynamo.guards.RootGuardManager.clone_manager",
                "torch._C._dynamo.guards.RootGuardManager.get_epilogue_lambda_guards",
                "torch._dynamo.guards.GuardManagerWrapper",
                "torch._dynamo.guards.GuardManagerWrapper.__init__",
                "torch._dynamo.guards.GuardManagerWrapper.__str__",
                "torch._dynamo.guards.GuardManagerWrapper.args",
                "torch._dynamo.guards.GuardManagerWrapper.cache_entry",
                "torch._dynamo.guards.GuardManagerWrapper.check",
                "torch._dynamo.guards.GuardManagerWrapper.check_verbose",
                "torch._dynamo.guards.GuardManagerWrapper.clone_with_chosen_sources",
                "torch._dynamo.guards.GuardManagerWrapper.closure_vars",
                "torch._dynamo.guards.GuardManagerWrapper.code_parts",
                "torch._dynamo.guards.GuardManagerWrapper.collect_diff_guard_sources",
                "torch._dynamo.guards.GuardManagerWrapper.construct_dict_manager_string",
                "torch._dynamo.guards.GuardManagerWrapper.construct_manager_string",
                "torch._dynamo.guards.GuardManagerWrapper.diff_guard_root",
                "torch._dynamo.guards.GuardManagerWrapper.diff_guard_sources",
                "torch._dynamo.guards.GuardManagerWrapper.extra_state",
                "torch._dynamo.guards.GuardManagerWrapper.finalize",
                "torch._dynamo.guards.GuardManagerWrapper.find_tag_safe_roots",
                "torch._dynamo.guards.GuardManagerWrapper.get_guard_lines",
                "torch._dynamo.guards.GuardManagerWrapper.get_manager_line",
                "torch._dynamo.guards.GuardManagerWrapper.global_scope",
                "torch._dynamo.guards.GuardManagerWrapper.guard_fail_fn",
                "torch._dynamo.guards.GuardManagerWrapper.id_matched_objs",
                "torch._dynamo.guards.GuardManagerWrapper.no_tensor_aliasing_sources",
                "torch._dynamo.guards.GuardManagerWrapper.populate_code_parts_for_debugging",
                "torch._dynamo.guards.GuardManagerWrapper.populate_diff_guard_manager",
                "torch._dynamo.guards.GuardManagerWrapper.prepare_diff_guard_manager",
                "torch._dynamo.guards.GuardManagerWrapper.printed_relational_guards",
                "torch._dynamo.guards.GuardManagerWrapper.root",
                "torch._dynamo.guards.GuardManagerWrapper.verbose_code_parts",
                "torch._dynamo.guards.IndentedBufferWithPrefix",
                "torch._dynamo.guards.IndentedBufferWithPrefix.prefix",
                "torch._dynamo.guards.IndentedBufferWithPrefix.writeline",
                "torch._inductor.utils.DeferredLineBase",
                "torch._inductor.utils.DeferredLineBase.__bool__",
                "torch._inductor.utils.DeferredLineBase.__call__",
                "torch._inductor.utils.DeferredLineBase.__getitem__",
                "torch._inductor.utils.DeferredLineBase.__init__",
                "torch._inductor.utils.DeferredLineBase.__len__",
                "torch._inductor.utils.DeferredLineBase.line",
                "torch._inductor.utils.DeferredLineBase.lstrip",
                "torch._inductor.utils.DeferredLineBase.with_prefix",
                "torch._inductor.utils.IndentedBuffer",
                "torch._inductor.utils.IndentedBuffer.__add__",
                "torch._inductor.utils.IndentedBuffer.__bool__",
                "torch._inductor.utils.IndentedBuffer.__init__",
                "torch._inductor.utils.IndentedBuffer.__repr__",
                "torch._inductor.utils.IndentedBuffer.clear",
                "torch._inductor.utils.IndentedBuffer.do_indent",
                "torch._inductor.utils.IndentedBuffer.do_unindent",
                "torch._inductor.utils.IndentedBuffer.getrawvalue",
                "torch._inductor.utils.IndentedBuffer.getvalue",
                "torch._inductor.utils.IndentedBuffer.getvaluewithlinemap",
                "torch._inductor.utils.IndentedBuffer.indent",
                "torch._inductor.utils.IndentedBuffer.map",
                "torch._inductor.utils.IndentedBuffer.newline",
                "torch._inductor.utils.IndentedBuffer.prefix",
                "torch._inductor.utils.IndentedBuffer.set_tabwidth",
                "torch._inductor.utils.IndentedBuffer.splice",
                "torch._inductor.utils.IndentedBuffer.tabwidth",
                "torch._inductor.utils.IndentedBuffer.writeline",
                "torch._inductor.utils.IndentedBuffer.writelines",
                "torch._inductor.utils.LineContext",
                "torch._inductor.utils.LineContext.__eq__",
                "torch._inductor.utils.LineContext.__init__",
                "torch._inductor.utils.LineContext.__match_args__",
                "torch._inductor.utils.LineContext.__new__",
                "torch._inductor.utils.LineContext.context",
                "torch._inductor.utils.ValueWithLineMap",
                "torch._inductor.utils.ValueWithLineMap.__dataclass_fields__",
                "torch._inductor.utils.ValueWithLineMap.__eq__",
                "torch._inductor.utils.ValueWithLineMap.__hash__",
                "torch._inductor.utils.ValueWithLineMap.__init__",
                "torch._inductor.utils.ValueWithLineMap.__match_args__",
                "torch._inductor.utils.ValueWithLineMap.__new__",
                "torch._inductor.utils.ValueWithLineMap.line_map",
                "torch._inductor.utils.ValueWithLineMap.value"
            ],
            "common": {
                "torch._dynamo.eval_frame._TorchDynamoContext.__init__": {
                    "diagnostics": {
                        "added": [
                            "Type of parameter \"callback\" is partially unknown\n\u00a0\u00a0Parameter type is \"DynamoCallbackFn | bool | None\""
                        ]
                    }
                },
                "torch._dynamo.types.DynamoCallbackFn.__call__": {
                    "diagnostics": {
                        "added": [
                            "Return type is partially unknown\n\u00a0\u00a0Return type is \"ConvertFrameReturn\"",
                            "Type of parameter \"cache_entry\" is partially unknown\n\u00a0\u00a0Parameter type is \"_CacheEntry | None\""
                        ]
                    }
                }
            }
        }
    },
    "filename": "pyright_compare.086376.a5725965ea2-40c4d61f9ab.json"
}
