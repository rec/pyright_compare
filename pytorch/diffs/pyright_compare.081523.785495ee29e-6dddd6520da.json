{
    "commits": {
        "before": {
            "committer_date": "2025-04-14 17:38:20",
            "commit_id": "785495ee29e",
            "message": "[dynamo][error message] Hint for dict_items as inputs to the compiled region (#151169)"
        },
        "after": {
            "committer_date": "2025-04-14 18:18:06",
            "commit_id": "6dddd6520da",
            "message": "[dynamic shapes] add sym_and, sym_or (#150456)"
        }
    },
    "completeness": [0.363099, 0.363076],
    "filename": "pyright_compare.081523.785495ee29e-6dddd6520da.json",
    "diff": {
        "absolute": {
            "exportedSymbolCounts": {
                "withAmbiguousType": -1,
                "withUnknownType": 2
            },
            "completenessScore": -2.260887758459562e-05
        },
        "percent": {
            "exportedSymbolCounts": {
                "withAmbiguousType": -0.12195121951219512,
                "withUnknownType": 0.021258503401360544
            },
            "completenessScore": -0.006226650062270985
        },
        "symbols": {
            "added": ["torch.fx.experimental.symbolic_shapes.sym_and"],
            "common": {
                "torch.fx.experimental.symbolic_shapes.sym_or": {
                    "diagnostics": {
                        "added": [
                            "Return type is partially unknown\n\u00a0\u00a0Return type is \"bool | SymBool\"",
                            "Type of parameter \"others\" is partially unknown\n\u00a0\u00a0Parameter type is \"bool | SymBool\"",
                            "Type of parameter \"x\" is partially unknown\n\u00a0\u00a0Parameter type is \"bool | SymBool\""
                        ],
                        "removed": [
                            "Type is missing type annotation and could be inferred differently by type checkers\n\u00a0\u00a0Inferred type is \"(a: Any, b: Any, /) -> Any\""
                        ]
                    }
                }
            }
        }
    }
}
