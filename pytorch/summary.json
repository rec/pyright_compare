[
    {
        "committer_date": "2025-03-29 03:33:07",
        "commit_id": "7a470c93206",
        "message": "[ROCm] change preferred blas lib defaults (#150212)",
        "index": "081000",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-03-31 17:04:25",
        "commit_id": "284b7668980",
        "message": "[dynamic shapes] C++ bindings for guard_or_false/true (#150148)",
        "index": "081045",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "missingFunctionDocStringCount": 2,
            "completenessScore": -4.538502211498541e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-03-31 21:32:20",
        "commit_id": "925fd4aa2e4",
        "message": "[export] min/max ranges for dim hints (#149590)",
        "index": "081050",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 1}},
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-04-01 10:40:43",
        "commit_id": "a10b765bf15",
        "message": "[pytree] add APIs to determine a class is a namedtuple or PyStructSequence (#113257)",
        "index": "081075",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 4, "withUnknownType": 2},
            "otherSymbolCounts": {"withKnownType": -4, "withUnknownType": -3},
            "missingClassDocStringCount": -1,
            "completenessScore": 0.00011361640756274438
        },
        "symbols": {"added": 6, "removed": 7}
    },
    {
        "committer_date": "2025-04-01 16:46:07",
        "commit_id": "35c45a4a315",
        "message": "[Reland] Launch kernel on current stream & remove `record_stream` entirely (#150398)",
        "index": "081082",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -4, "withUnknownType": 4},
            "otherSymbolCounts": {"withKnownType": 3, "withUnknownType": 3},
            "completenessScore": -0.00024970347712088836
        },
        "symbols": {"added": 6}
    },
    {
        "committer_date": "2025-04-01 17:32:41",
        "commit_id": "3b0cd9b542b",
        "message": "[Quant][PT2E] add a lowering pass for x86 backend (#149708)",
        "index": "081088",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.267126763250138e-05,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-01 19:15:43",
        "commit_id": "d2ad9aa2f29",
        "message": "[dtensor][tp] add a ParallelStyle PrepareModuleInputOutput (#150372)",
        "index": "081097",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2, "withAmbiguousType": 4},
            "completenessScore": -1.11709857249509e-05
        },
        "symbols": {"added": 6}
    },
    {
        "committer_date": "2025-04-01 21:13:39",
        "commit_id": "b70d105c779",
        "message": "infer dynamic shapes through additional inputs (#150144)",
        "index": "081103",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 5},
            "completenessScore": -7.353787370972809e-05
        },
        "symbols": {"added": 6}
    },
    {
        "committer_date": "2025-04-02 13:17:58",
        "commit_id": "c69c3c885e8",
        "message": "Add needs_exact_strides operator tag for Inductor to force exact strides (#148063)",
        "index": "081132",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-03 21:15:38",
        "commit_id": "d41c22b5781",
        "message": "Revert \"[fx] Move Node._prepend/Node._remove_from_list to C++ (#148261)\" (#150542)",
        "index": "081202",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 4},
            "otherSymbolCounts": {"withKnownType": -4},
            "completenessScore": 0.00015887095850702915
        },
        "symbols": {"added": 4, "removed": 4}
    },
    {
        "committer_date": "2025-04-04 17:52:53",
        "commit_id": "861d2cc02cc",
        "message": "Add a param for save format in Storage Writer (#150025)",
        "index": "081237",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3},
            "otherSymbolCounts": {"withKnownType": 1},
            "missingClassDocStringCount": 1,
            "completenessScore": 0.00011910121610381186
        },
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-04-06 17:50:35",
        "commit_id": "6c38b9be730",
        "message": "[typing] Add type hints to `__init__` methods in `torch.distributions`. (#144197)",
        "index": "081254",
        "diagnostics": {"added": 121, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 2,
                "withAmbiguousType": -33,
                "withUnknownType": 39
            },
            "completenessScore": -5.651613361745689e-05
        },
        "symbols": {"added": 8}
    },
    {
        "committer_date": "2025-04-07 20:52:45",
        "commit_id": "eba05e2d3ef",
        "message": "[AO] Refactor convert and add QuantAffinePlaceholderObserver (#150644)",
        "index": "081285",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2638820001641413e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-07 22:10:39",
        "commit_id": "78fe079c97f",
        "message": "Support having no metadata file for HuggingFaceStorageReader (#150701)",
        "index": "081287",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "missingFunctionDocStringCount": 2,
            "completenessScore": -4.5269176893014684e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-04-09 16:42:55",
        "commit_id": "c714d2fc0ee",
        "message": "[hop] support base_hop._gen_schema (#149688)",
        "index": "081347",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 3}},
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-04-09 19:29:50",
        "commit_id": "f237ee54bfb",
        "message": "ProcessGroupGloo: support lazy_init (#150801)",
        "index": "081358",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1, "withUnknownType": 1}},
        "symbols": {}
    },
    {
        "committer_date": "2025-04-10 05:05:37",
        "commit_id": "4273e5d15cf",
        "message": "Expose is_available API for torch.backends.mkldnn (#147432)",
        "index": "081388",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -2.263035794591861e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-10 13:44:31",
        "commit_id": "73f3d6d9aaa",
        "message": "Revert \"ProcessGroupGloo: support lazy_init (#150801)\"",
        "index": "081390",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1, "withUnknownType": -1}},
        "symbols": {}
    },
    {
        "committer_date": "2025-04-10 15:06:23",
        "commit_id": "e6969c1bd8d",
        "message": "[export] Symint support (nonstrict, Dim.DYNAMIC) (#150198)",
        "index": "081393",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 6, "withUnknownType": 2},
            "completenessScore": 0.00019268086678803087
        },
        "symbols": {"added": 8}
    },
    {
        "committer_date": "2025-04-10 16:19:00",
        "commit_id": "5471e80fb4c",
        "message": "Remove guard_size_oblivious from vector_norm decomposition. (#148809)",
        "index": "081394",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.2628264377266838e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-10 22:23:33",
        "commit_id": "f304483e95b",
        "message": "[ONNX] Add asdict method to VerificationInfo class (#151024)",
        "index": "081413",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-11 01:58:35",
        "commit_id": "df4e5294a66",
        "message": "Reapply \"ProcessGroupGloo: support lazy_init (#150801)\" (#151031)",
        "index": "081420",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1, "withUnknownType": 1}},
        "symbols": {}
    },
    {
        "committer_date": "2025-04-11 03:06:34",
        "commit_id": "86370fd6580",
        "message": "[dynamo] Allow guards to be dropped with custom filter functions. (#150936)",
        "index": "081425",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": 1},
            "completenessScore": -6.226650062263195e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-11 22:03:24",
        "commit_id": "85549fe6de3",
        "message": "Add `__all__` for `torch.utils.dlpack` (#149026)",
        "index": "081457",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -2.262156971133411e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-13 09:18:50",
        "commit_id": "304633152c2",
        "message": "Clean up duplicated code in lr_scheduler (#150984)",
        "index": "081497",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": -3,
                "withAmbiguousType": 3,
                "withUnknownType": -1
            },
            "missingFunctionDocStringCount": -1,
            "completenessScore": -0.00016417793215667276
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-13 20:38:11",
        "commit_id": "8494d5582a1",
        "message": "Propagate callable parameter types using ParamSpec (#142306) (#151014)",
        "index": "081500",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.965762303809184e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-14 07:07:10",
        "commit_id": "bbc5fe85045",
        "message": "Add inductor standalone_compile API (#150670)",
        "index": "081508",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": -1},
            "completenessScore": 6.22703779811773e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-14 09:53:22",
        "commit_id": "5a64476ed64",
        "message": "[Easy] Add `output_size` in forward method of ConvTranspose2d (#150609)",
        "index": "081510",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-04-14 15:22:33",
        "commit_id": "24b3ab92550",
        "message": "Revert \"Add inductor standalone_compile API (#150670)\"",
        "index": "081515",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withAmbiguousType": 1},
            "completenessScore": -6.22703779811773e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-14 18:18:06",
        "commit_id": "6dddd6520da",
        "message": "[dynamic shapes] add sym_and, sym_or (#150456)",
        "index": "081523",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": -1, "withUnknownType": 2},
            "completenessScore": -2.260887758459562e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-14 22:00:09",
        "commit_id": "c9aef508984",
        "message": "Add inductor standalone_compile API (#150670)",
        "index": "081536",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": -1},
            "completenessScore": 6.226650062268746e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-15 01:00:13",
        "commit_id": "25803d3a22a",
        "message": "Optimize typing in `lr_scheduler.py` (#151219)",
        "index": "081542",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 27, "withUnknownType": -27},
            "completenessScore": 0.0016811955168119508
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-15 14:45:20",
        "commit_id": "c5de6ff079e",
        "message": "Remove ls from filesystem base (#151117)",
        "index": "081560",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 2.2717443623421207e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-15 17:35:59",
        "commit_id": "74f6bc28a72",
        "message": "Revert \"Add inductor standalone_compile API (#150670)\"",
        "index": "081564",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withAmbiguousType": 1},
            "completenessScore": -6.22703779812328e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-15 20:25:29",
        "commit_id": "f98150fc8e6",
        "message": "Warn user of existing lock file to avoid infinite waiting (#149382)",
        "index": "081578",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.271356626482035e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-15 23:38:15",
        "commit_id": "3cf0e2d8ec8",
        "message": "Add inductor standalone_compile API (#150670)",
        "index": "081588",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": -1},
            "completenessScore": 6.226650062263195e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-04-17 18:51:02",
        "commit_id": "2ed2cb58051",
        "message": "add generalized pareto distribution (GPD) (#135968)",
        "index": "081673",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 3,
                "withAmbiguousType": 1,
                "withUnknownType": 17
            },
            "missingFunctionDocStringCount": 8,
            "completenessScore": -0.0002898580915435822,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 21}
    },
    {
        "committer_date": "2025-04-17 23:30:19",
        "commit_id": "d8bafd23ab2",
        "message": "[DDP] add one option to allow skipping all reduce unused parameters (#151503)",
        "index": "081685",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.266693004948639e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-18 02:14:50",
        "commit_id": "98c892749bd",
        "message": "c10d/Store: add nonblocking mode to queue_pop (#151485)",
        "index": "081692",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "otherSymbolCounts": {"withKnownType": 4},
            "missingFunctionDocStringCount": 3,
            "missingClassDocStringCount": 1,
            "completenessScore": 3.9513343149499836e-05
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-04-18 06:42:12",
        "commit_id": "eb1f85a2a00",
        "message": "Support C++ statically_known_true (#151346)",
        "index": "081703",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -2.2665158882773095e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-19 00:11:15",
        "commit_id": "adf5f38eae0",
        "message": "Don't specialize min/max (#151347)",
        "index": "081745",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "completenessScore": 2.2665158882773095e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-22 06:07:57",
        "commit_id": "dfdf731579d",
        "message": "Do not generate long log messaged for suppressed data dependent errors. (#151023)",
        "index": "081819",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.950842977679114e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-22 21:08:30",
        "commit_id": "bc6c0bc344e",
        "message": "Revert \"Do not generate long log messaged for suppressed data dependent errors. (#151023)\"",
        "index": "081853",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.950842977679114e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-23 04:32:06",
        "commit_id": "f9bdfe90ae6",
        "message": "[MegaCache] Return None on no compilation (#151921)",
        "index": "081879",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-24 02:53:59",
        "commit_id": "2ee8de54b17",
        "message": "[dynamic shapes] user-code friendly statically_known_true, has_static_value (#151601)",
        "index": "081923",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2665158882773095e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-24 18:07:01",
        "commit_id": "81c4369d813",
        "message": "[dynamo] Add guard serialization for tensor matches. (#151318)",
        "index": "081951",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 1},
            "missingFunctionDocStringCount": 1
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-04-24 19:22:45",
        "commit_id": "b1d055fd6a0",
        "message": "Revert \"[dynamo] Add guard serialization for tensor matches. (#151318)\"",
        "index": "081954",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": -2, "withUnknownType": -1},
            "missingFunctionDocStringCount": -1
        },
        "symbols": {"removed": 3}
    },
    {
        "committer_date": "2025-04-25 09:45:25",
        "commit_id": "33c75cae0a9",
        "message": "Add torch.accelerator.device_index as accelerator's device switch context (#148864)",
        "index": "081977",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 4, "withAmbiguousType": 2},
            "completenessScore": 0.00011266982586294327
        },
        "symbols": {"added": 6}
    },
    {
        "committer_date": "2025-04-25 14:16:23",
        "commit_id": "a34c28e0d25",
        "message": "[dynamo] Add guard serialization for tensor matches. (#151318)",
        "index": "081981",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 1},
            "missingFunctionDocStringCount": 1
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-04-27 15:56:44",
        "commit_id": "861945100ec",
        "message": "[Kineto] Enable OOM observer (#152160)",
        "index": "082033",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.948564911215868e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-28 00:39:52",
        "commit_id": "98bd2bd1abc",
        "message": "Do not generate long log messages for suppressed data dependent errors. (#151023)",
        "index": "082037",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.94807416240206e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-28 03:52:47",
        "commit_id": "13966d0bf55",
        "message": "[BE] Migrate dtype_abbrs into one location (#152229)",
        "index": "082041",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": -1},
            "completenessScore": 2.266579992094009e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-29 03:51:32",
        "commit_id": "119cdcc926e",
        "message": "Add rich support to torch.distributed.tensor.debug.visualize_sharding (#152027)",
        "index": "082093",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "completenessScore": 2.26686172981605e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-04-30 18:30:28",
        "commit_id": "7a3cae4b200",
        "message": "Configurable logging for cpp_extensions.py (#152260)",
        "index": "082195",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.26686172981605e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-04-30 21:27:29",
        "commit_id": "3f10091d3c0",
        "message": "Clean up conda usage in benchmark scripts (#152552)",
        "index": "082204",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": -8,
                "withAmbiguousType": -1,
                "withUnknownType": -2
            },
            "missingFunctionDocStringCount": -1,
            "completenessScore": -0.00024800257614421284,
            "filesAnalyzed": -1
        },
        "symbols": {"removed": 11}
    },
    {
        "committer_date": "2025-05-02 18:08:11",
        "commit_id": "376529c78b7",
        "message": "consolidate guard_or_x and definitely_x (#152463)",
        "index": "082299",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -2},
            "completenessScore": 4.534022263358306e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-05-02 19:18:58",
        "commit_id": "d457b4492d1",
        "message": "Optimize `Sequential` methods description (#147304)",
        "index": "082305",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -2},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-06 02:55:34",
        "commit_id": "97dfd8dd53f",
        "message": "[invoke_subgraph] Run missing graph passes recursively (#152675)",
        "index": "082414",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.952140120816461e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-06 10:03:17",
        "commit_id": "e32a16a9dad",
        "message": "Correct torch.xpu.is_bf16_supported return False if no XPU detected (#152317)",
        "index": "082427",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.21929224454143e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-07 06:04:22",
        "commit_id": "93a0a7a0bf3",
        "message": "Fix bug visualizing 1D Tensor using rich (#152871)",
        "index": "082473",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 1,
                "withAmbiguousType": -1,
                "withUnknownType": 1
            },
            "missingFunctionDocStringCount": 2,
            "completenessScore": 3.951261789197913e-05
        },
        "symbols": {"added": 4, "removed": 3}
    },
    {
        "committer_date": "2025-05-08 04:49:59",
        "commit_id": "94ca3a4666d",
        "message": "Add torch._C.Tag.needs_contiguous_strides (#152859)",
        "index": "082513",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-08 18:25:34",
        "commit_id": "7cdf5048ea4",
        "message": "Fix evaluate_expr to include suppress_guards_tls in cache key (#152661)",
        "index": "082545",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": 1},
            "completenessScore": -6.218905472638037e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-10 11:13:04",
        "commit_id": "4c11b261586",
        "message": "refine fp32 precision api (#125888)",
        "index": "082626",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 11},
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 4},
            "missingFunctionDocStringCount": 2,
            "missingClassDocStringCount": 2,
            "completenessScore": -0.0002097547311911696
        },
        "symbols": {"added": 18}
    },
    {
        "committer_date": "2025-05-10 13:36:47",
        "commit_id": "70c8047c2d5",
        "message": "include user stacks with constraint violation error message (#152924)",
        "index": "082627",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.949514241408103e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-11 00:35:46",
        "commit_id": "fdc387ec7c9",
        "message": "Revert \"refine fp32 precision api (#125888)\"",
        "index": "082634",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": -11},
            "otherSymbolCounts": {"withKnownType": -2, "withUnknownType": -4},
            "missingFunctionDocStringCount": -2,
            "missingClassDocStringCount": -2,
            "completenessScore": 0.0002097711597079388
        },
        "symbols": {"removed": 18}
    },
    {
        "committer_date": "2025-05-11 19:16:01",
        "commit_id": "0104ac0f6f3",
        "message": "[Ez][BE]: Fix click ImportError in torch/csrc/jit (#153323)",
        "index": "082639",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -2.267466356370429e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-12 22:55:25",
        "commit_id": "f05b38aa267",
        "message": "[BE]: Improve decorator typing for Optimizer subclasses (#153374)",
        "index": "082679",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 10, "withUnknownType": -10},
            "completenessScore": 0.0006218132073125271
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-14 02:18:36",
        "commit_id": "d51bc273781",
        "message": "[export] Make draft_export public (#153219)",
        "index": "082739",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2710506620393645e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-14 06:29:16",
        "commit_id": "4c5cf18ee05",
        "message": "[device_mesh] improve device selection logic (#150897)",
        "index": "082749",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.946590602660338e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-14 19:24:36",
        "commit_id": "a54bf43baad",
        "message": "Fix support of MixtureSameFamily [bugfix]. (#151317)",
        "index": "082779",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2, "withUnknownType": 5},
            "completenessScore": -3.460871503474516e-05
        },
        "symbols": {"added": 7}
    },
    {
        "committer_date": "2025-05-15 09:36:42",
        "commit_id": "f7a5aa1d8d3",
        "message": "[torchgen] Refactor and simplify `gen_pyi.py` to use Generic TypeAlias (PEP 585) and Union Type (PEP 604) (#150727)",
        "index": "082819",
        "diagnostics": {"added": 164, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 20, "withUnknownType": -20},
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 0.0012429308308992693
        },
        "symbols": {"added": 20, "removed": 20}
    },
    {
        "committer_date": "2025-05-15 09:36:42",
        "commit_id": "22b124335e0",
        "message": "[BE] Update `.pyi` stub template to use Generic TypeAlias (PEP 585) and Union Type (PEP 604) (#150728)",
        "index": "082820",
        "diagnostics": {"added": 10, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 1,
                "withAmbiguousType": 2,
                "withUnknownType": -3
            },
            "otherSymbolCounts": {"withKnownType": -4, "withUnknownType": -2},
            "completenessScore": 6.214654154496069e-05
        },
        "symbols": {"removed": 6}
    },
    {
        "committer_date": "2025-05-15 19:01:57",
        "commit_id": "a4c828199e0",
        "message": "[BE] Add `__all__` to `torch/nn/functional.pyi` and `torch/return_types.pyi` (#150729)",
        "index": "082833",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "missingFunctionDocStringCount": 2,
            "completenessScore": 3.936488304551178e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-16 07:51:50",
        "commit_id": "3fe42d4d5d1",
        "message": "[export] Dynamo symint support (#152677)",
        "index": "082861",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 7, "withUnknownType": 3},
            "missingClassDocStringCount": 1,
            "completenessScore": 0.00020706765189709708
        },
        "symbols": {"added": 10}
    },
    {
        "committer_date": "2025-05-16 19:10:04",
        "commit_id": "f7fb2f66e3b",
        "message": "cleanup, refactor and add missing  self._dde_suppressed checks (#152657)",
        "index": "082890",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.210408644891086e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-16 19:42:20",
        "commit_id": "1748fa529a9",
        "message": "Revert \"cleanup, refactor and add missing  self._dde_suppressed checks (#152657)\"",
        "index": "082893",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": 1},
            "completenessScore": -6.210408644891086e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-17 06:21:41",
        "commit_id": "9b2a45ac7d2",
        "message": "Refactor `torch/utils/data/datapipes/gen_pyi.py` with `torchgen` (#150626)",
        "index": "082905",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.864049496186798e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-05-17 08:21:59",
        "commit_id": "b4fb801b2d5",
        "message": "[export] Move PT2 constants to torch::_export (#153206)",
        "index": "082907",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 20},
            "completenessScore": 0.0007853319584940621,
            "filesAnalyzed": 2
        },
        "symbols": {"added": 20}
    },
    {
        "committer_date": "2025-05-19 08:25:20",
        "commit_id": "f3daedb263d",
        "message": "[BE]: Remove redundant copy (#153629)",
        "index": "082926",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 4, "withUnknownType": -4},
            "completenessScore": 0.0002480774001488162
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-19 14:52:32",
        "commit_id": "c5cba39d469",
        "message": "Improve torch.ops typing (#153558)",
        "index": "082931",
        "diagnostics": {"added": 28, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 3,
                "withAmbiguousType": 5,
                "withUnknownType": -8
            },
            "otherSymbolCounts": {
                "withKnownType": 8,
                "withAmbiguousType": 4,
                "withUnknownType": 7
            },
            "missingFunctionDocStringCount": 7,
            "missingClassDocStringCount": 1,
            "completenessScore": 0.00018605805011162602
        },
        "symbols": {"added": 22, "removed": 3}
    },
    {
        "committer_date": "2025-05-19 16:15:14",
        "commit_id": "0ec8fe46d7c",
        "message": "cleanup, refactor and add missing  self._dde_suppressed checks (#152657)",
        "index": "082934",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.201935003724568e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-19 23:32:36",
        "commit_id": "d81217be2e4",
        "message": "Revert \"Improve torch.ops typing (#153558)\"",
        "index": "082960",
        "diagnostics": {"added": 62, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": -3,
                "withAmbiguousType": -5,
                "withUnknownType": 8
            },
            "otherSymbolCounts": {
                "withKnownType": -8,
                "withAmbiguousType": -4,
                "withUnknownType": -7
            },
            "missingFunctionDocStringCount": -7,
            "missingClassDocStringCount": -1,
            "completenessScore": -0.00018605805011162602
        },
        "symbols": {"added": 3, "removed": 22}
    },
    {
        "committer_date": "2025-05-21 07:15:00",
        "commit_id": "ffd49d538e8",
        "message": "[BE][Ez]: Improve typing in torch/modules/container.py (#153728)",
        "index": "083027",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.201935003719017e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-21 15:56:19",
        "commit_id": "b7d08defe9c",
        "message": "[BE]: Type previously untyped decorators (#153726)",
        "index": "083034",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 37, "withUnknownType": -37},
            "otherSymbolCounts": {"withKnownType": 4, "withUnknownType": -4},
            "completenessScore": 0.0022947159513768134
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-21 18:18:47",
        "commit_id": "bb7e30c1658",
        "message": "[MegaCache] Make MegaCache generic to allow external plugins registration (#152977)",
        "index": "083039",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -2}, "missingFunctionDocStringCount": 2},
        "symbols": {"added": 3, "removed": 5}
    },
    {
        "committer_date": "2025-05-22 16:49:08",
        "commit_id": "7d3dab6b901",
        "message": "Revert \"[BE]: Type previously untyped decorators (#153726)\"",
        "index": "083092",
        "diagnostics": {"added": 50, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -37, "withUnknownType": 37},
            "otherSymbolCounts": {"withKnownType": -4, "withUnknownType": 4},
            "completenessScore": -0.0022947159513768134
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-23 15:24:28",
        "commit_id": "9e089bb5b67",
        "message": "change guard_or impl for better perf and simplicity (#153674)",
        "index": "083126",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.919724473605557e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-05-23 15:40:25",
        "commit_id": "7e80f23516a",
        "message": "[export] Move PT2ArchiveWriter/Reader to torch/export (#153795)",
        "index": "083128",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 1,
                "withAmbiguousType": 1,
                "withUnknownType": 1
            },
            "otherSymbolCounts": {
                "withKnownType": 16,
                "withAmbiguousType": 2,
                "withUnknownType": 2
            },
            "completenessScore": -6.446166292195521e-06
        },
        "symbols": {"added": 23}
    },
    {
        "committer_date": "2025-05-23 18:29:08",
        "commit_id": "4ff19ecf665",
        "message": "Revert \"[export] Move PT2ArchiveWriter/Reader to torch/export (#153795)\"",
        "index": "083136",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": -1,
                "withAmbiguousType": -1,
                "withUnknownType": -1
            },
            "otherSymbolCounts": {
                "withKnownType": -16,
                "withAmbiguousType": -2,
                "withUnknownType": -2
            },
            "completenessScore": 6.446166292195521e-06
        },
        "symbols": {"removed": 23}
    },
    {
        "committer_date": "2025-05-23 19:04:36",
        "commit_id": "3b21d792259",
        "message": "[export] Move PT2ArchiveWriter/Reader to torch/export (#153795)",
        "index": "083139",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 1,
                "withAmbiguousType": 1,
                "withUnknownType": 1
            },
            "otherSymbolCounts": {
                "withKnownType": 16,
                "withAmbiguousType": 2,
                "withUnknownType": 2
            },
            "completenessScore": -6.446166292195521e-06
        },
        "symbols": {"added": 23}
    },
    {
        "committer_date": "2025-05-24 04:30:57",
        "commit_id": "6503b4a96ed",
        "message": "Update to using mypy 1.15 (#154054)",
        "index": "083168",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 2,
                "withAmbiguousType": 1,
                "withUnknownType": -3
            },
            "completenessScore": 0.0001240233163835036
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-24 14:23:55",
        "commit_id": "53ecb8159aa",
        "message": "Introduce statically_known_false (#154291)",
        "index": "083171",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2825150556626816e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-26 04:17:56",
        "commit_id": "7d11c61c26c",
        "message": "Re-enable FakeTensor caching for SymInts (#152662)",
        "index": "083188",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": 1},
            "completenessScore": -6.200781298443259e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-26 15:59:21",
        "commit_id": "f55f2f42a7b",
        "message": "Add missing docstring for `sym_ite` (#154201)",
        "index": "083195",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-26 17:13:22",
        "commit_id": "3f64502c984",
        "message": "Revert \"Re-enable FakeTensor caching for SymInts (#152662)\"",
        "index": "083197",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.200781298443259e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-26 17:48:28",
        "commit_id": "839c9c61565",
        "message": "Use property instead of ClassVar for `Uniform.arg_constraints` and `Wishart.arg_constraints` (#154361)",
        "index": "083198",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {"exportedSymbolCounts": {"withAmbiguousType": -2, "withUnknownType": 2}},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-27 11:55:58",
        "commit_id": "c52a002a220",
        "message": "Add getDeviceProperties api to torch mtia device (#153577)",
        "index": "083221",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.282232005673679e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-27 14:58:02",
        "commit_id": "7ae204c3b67",
        "message": "[BE][CI][Easy] Run `lintrunner` on generated `.pyi` stub files (#150732)",
        "index": "083225",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.918063391677995e-05
        },
        "symbols": {"added": 2, "removed": 1}
    },
    {
        "committer_date": "2025-05-27 16:40:18",
        "commit_id": "2560c1f3f00",
        "message": "add sticky cache pgo (#154418)",
        "index": "083229",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.917577580969667e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-27 17:05:49",
        "commit_id": "70fbd5e08c8",
        "message": "[ez] Add docblock for resolve_unbacked_bindings (#154374)",
        "index": "083230",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-27 18:13:38",
        "commit_id": "5075df6feec",
        "message": "Make torch importable if compiled without TensorPipe (#154382)",
        "index": "083234",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": -7, "withUnknownType": -2},
            "missingClassDocStringCount": -2,
            "missingDefaultParamCount": -2
        },
        "symbols": {"removed": 9}
    },
    {
        "committer_date": "2025-05-27 19:47:32",
        "commit_id": "4fd8a54a414",
        "message": "[ez] add docblock for is_accessor_node (#154375)",
        "index": "083241",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 04:43:22",
        "commit_id": "b82fb57b672",
        "message": "[ez] add docblock for RuntimeAssert (#154401)",
        "index": "083266",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingClassDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 05:34:25",
        "commit_id": "dcdaef5206d",
        "message": "[ez] add docblock for free_symbols (#154378)",
        "index": "083270",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 05:37:25",
        "commit_id": "07405a6cffc",
        "message": "[ez] add docblock for free_unbacked_symbols (#154379)",
        "index": "083271",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 05:41:19",
        "commit_id": "08c29deb5fe",
        "message": "[ez] add docblock to is_symbol_binding_fx_node (#154380)",
        "index": "083272",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 05:44:26",
        "commit_id": "8e25ba6963d",
        "message": "[ez] add docblock for find_symbol_binding_fx_nodes (#154381)",
        "index": "083273",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 14:10:07",
        "commit_id": "35a473e3644",
        "message": "[ez] add docblock for guard_scalar (#154385)",
        "index": "083292",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 14:13:22",
        "commit_id": "473a93eb589",
        "message": "[ez] add docblock for _ShapeGuardPrinter (#154402)",
        "index": "083293",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -2, "missingClassDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 14:17:17",
        "commit_id": "476e0a643a2",
        "message": "[ez] add docblock for ShapeGuardPythonPrinter (#154403)",
        "index": "083294",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -2, "missingClassDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 16:25:30",
        "commit_id": "d23aa7e182e",
        "message": "Add deprecation warning for `torch.ao.quantization` (#153892)",
        "index": "083297",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.917091860611288e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-28 16:35:48",
        "commit_id": "3b38989b5f8",
        "message": "Remove MemPoolContext  (#154042)",
        "index": "083298",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -4},
            "otherSymbolCounts": {"withKnownType": -3},
            "missingFunctionDocStringCount": -1,
            "missingClassDocStringCount": -1,
            "completenessScore": -0.0001567128212602853
        },
        "symbols": {"removed": 7}
    },
    {
        "committer_date": "2025-05-28 21:11:53",
        "commit_id": "e7318b863db",
        "message": "[ez] add docblock to cast_symbool_to_symint_guardless (#154400)",
        "index": "083313",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 21:19:49",
        "commit_id": "ed348e70269",
        "message": "Add docblock for TrackedFake (#154396)",
        "index": "083315",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingClassDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-05-28 23:01:22",
        "commit_id": "d865b784e4a",
        "message": "Support unbacked whitelist (#154295)",
        "index": "083323",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.91854929276958e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-29 00:36:34",
        "commit_id": "946a4c2bdca",
        "message": "BE: Type previously untyped decorators (#154515)",
        "index": "083334",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 37, "withUnknownType": -37},
            "otherSymbolCounts": {"withKnownType": 4, "withUnknownType": -4},
            "completenessScore": 0.0022941468253968034
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-30 03:19:49",
        "commit_id": "9c06dff1ce9",
        "message": "[multigraph] use specializations in compile_and_call_fx_graph (#153449)",
        "index": "083387",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 10, "withUnknownType": 2},
            "otherSymbolCounts": {
                "withKnownType": 313,
                "withAmbiguousType": 30,
                "withUnknownType": 576
            },
            "missingFunctionDocStringCount": 405,
            "missingClassDocStringCount": 29,
            "completenessScore": 0.0003442257479199795
        },
        "symbols": {"added": 931}
    },
    {
        "committer_date": "2025-05-30 03:29:45",
        "commit_id": "20ee5f9044c",
        "message": "remove allow-untyped-defs from elastic_distributed_sampler.py (#154620)",
        "index": "083388",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 4,
                "withAmbiguousType": -1,
                "withUnknownType": -2
            },
            "completenessScore": 0.00022485013765388695
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-05-30 06:53:37",
        "commit_id": "d173ba5a756",
        "message": "Revert \"Remove MemPoolContext  (#154042)\"",
        "index": "083393",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 4},
            "otherSymbolCounts": {"withKnownType": 3},
            "missingFunctionDocStringCount": 1,
            "missingClassDocStringCount": 1,
            "completenessScore": 0.0001558578437246272
        },
        "symbols": {"added": 7}
    },
    {
        "committer_date": "2025-05-30 07:26:09",
        "commit_id": "0df96e3921d",
        "message": "remove allow-untyped-defs from torch/ao/quantization/stubs.py (#154622)",
        "index": "083395",
        "diagnostics": {"added": 8, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -2},
            "completenessScore": 8.492781442703823e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-05-30 07:37:56",
        "commit_id": "d66a55def0c",
        "message": "remove allow-untyped-defs from torch/distributed/elastic/utils/logging.py (#154625)",
        "index": "083398",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.194251734387146e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-30 08:38:05",
        "commit_id": "dc82e911e7f",
        "message": "remove allow-untyped-defs from torch/utils/data/datapipes/iter/filelister.py (#154624)",
        "index": "083403",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.194251734392697e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-30 15:50:31",
        "commit_id": "ba3f91af97c",
        "message": "Type hints for distributions/utils (#154712)",
        "index": "083410",
        "diagnostics": {"added": 6, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": -1},
            "completenessScore": 6.194251734392697e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-30 16:14:37",
        "commit_id": "8002d22ce35",
        "message": "[dynamo] Trace into descriptor with `__set__` (#154176)",
        "index": "083413",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 3}, "missingFunctionDocStringCount": 2},
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-05-30 17:23:36",
        "commit_id": "fc0135ca118",
        "message": "Re-enable FakeTensor caching for SymInts (#152662)",
        "index": "083417",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": 1},
            "completenessScore": -6.194251734392697e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-05-31 01:21:54",
        "commit_id": "f01e628e3b3",
        "message": "Resubmit Remove MemPoolContext  (#154042) (#154746)",
        "index": "083453",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -4},
            "otherSymbolCounts": {"withKnownType": -3},
            "missingFunctionDocStringCount": -1,
            "missingClassDocStringCount": -1,
            "completenessScore": -0.0001558157499481072
        },
        "symbols": {"removed": 7}
    },
    {
        "committer_date": "2025-05-31 23:06:45",
        "commit_id": "9ce2732b685",
        "message": "[BE][Ez]: Fully type nn.utils.clip_grad (#154801)",
        "index": "083469",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 6, "withUnknownType": -6},
            "completenessScore": 0.0003717472118959231
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-06-01 21:02:43",
        "commit_id": "0350c7e72c7",
        "message": "[BE] Introduce torch.AcceleratorError (#152023)",
        "index": "083478",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "otherSymbolCounts": {"withKnownType": 1},
            "missingClassDocStringCount": 2,
            "completenessScore": 7.787146816734536e-05
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-06-03 07:58:38",
        "commit_id": "ea5b9eca74e",
        "message": "Combine sticky pgo key with job id (#154863)",
        "index": "083538",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.893332185805898e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-03 16:12:54",
        "commit_id": "ff92b42fc33",
        "message": "[c10d][gloo] Integrate vendor generic FR into gloo (#152614)",
        "index": "083551",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 3}},
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-06-03 17:33:32",
        "commit_id": "31405a69fb9",
        "message": "[typing] Add missing type annotations to torch.nn.init module (#154504)",
        "index": "083554",
        "diagnostics": {"added": 20, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 1,
                "withAmbiguousType": 11,
                "withUnknownType": -12
            },
            "completenessScore": 6.195403010966771e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-06-04 00:41:27",
        "commit_id": "50de6ae2536",
        "message": "Revert \"[BE][Ez]: Fully type nn.utils.clip_grad (#154801)\"",
        "index": "083580",
        "diagnostics": {"added": 10, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -6, "withUnknownType": 6},
            "completenessScore": -0.00037172418065795076
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-06-04 03:07:43",
        "commit_id": "3e57de1251b",
        "message": "[ONNX] Create support for rotary embeddings (#154745)",
        "index": "083585",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "completenessScore": -4.5992510489645255e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-04 06:04:29",
        "commit_id": "d2bfd97d71c",
        "message": "[export] Refactor pt2 save/load (#152495)",
        "index": "083594",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-05 22:35:04",
        "commit_id": "e1180c7228b",
        "message": "Add Intel GPU info collection to the collect env script (#137846)",
        "index": "083687",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 5},
            "missingFunctionDocStringCount": 5,
            "completenessScore": -7.59858403269198e-05
        },
        "symbols": {"added": 6}
    },
    {
        "committer_date": "2025-06-06 03:08:48",
        "commit_id": "0db3e0cf296",
        "message": "Revert \"Add Intel GPU info collection to the collect env script (#137846)\"",
        "index": "083694",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": -5},
            "missingFunctionDocStringCount": -5,
            "completenessScore": 7.59858403269198e-05
        },
        "symbols": {"removed": 6}
    },
    {
        "committer_date": "2025-06-06 05:53:24",
        "commit_id": "c6b4f98625b",
        "message": "Add Intel GPU info collection to the collect env script (#137846)",
        "index": "083696",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 4},
            "missingFunctionDocStringCount": 4,
            "completenessScore": -5.3004259322086966e-05
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-06-07 23:58:50",
        "commit_id": "abf4da0d242",
        "message": "[Profiler] Induce Inductor Import before Profiling (#155243)",
        "index": "083752",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-09 03:13:27",
        "commit_id": "6fb62931593",
        "message": "Revert \"Add Intel GPU info collection to the collect env script (#137846)\"",
        "index": "083765",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": -4},
            "missingFunctionDocStringCount": -4,
            "completenessScore": 5.3004259322086966e-05
        },
        "symbols": {"removed": 5}
    },
    {
        "committer_date": "2025-06-09 10:43:52",
        "commit_id": "e15848669f8",
        "message": "[1/n]adding torch.distributed.run option to provide destination for event logging (#154644) (#155268)",
        "index": "083768",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.789624578424803e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-10 22:40:58",
        "commit_id": "c4b93e6579c",
        "message": "Replace frame_traced_fn hook with get_traced_code() util (#155249)",
        "index": "083865",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": 1},
        "symbols": {"added": 1, "removed": 1}
    },
    {
        "committer_date": "2025-06-11 01:22:06",
        "commit_id": "5264f8cd8d0",
        "message": "Add Intel GPU info collection to the collect env script (#137846)",
        "index": "083872",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 4},
            "missingFunctionDocStringCount": 4,
            "completenessScore": -5.3021811811881925e-05
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-06-11 05:00:36",
        "commit_id": "5b9db4335e6",
        "message": "Include c++ stack traces when we hit constraint violation (#155603)",
        "index": "083877",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.893211377992145e-05
        },
        "symbols": {"added": 2, "removed": 1}
    },
    {
        "committer_date": "2025-06-11 15:18:47",
        "commit_id": "45c5a232373",
        "message": "Revert \"Add Intel GPU info collection to the collect env script (#137846)\"",
        "index": "083888",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1, "withUnknownType": -4},
            "missingFunctionDocStringCount": -4,
            "completenessScore": 5.3030584186319896e-05
        },
        "symbols": {"removed": 5}
    },
    {
        "committer_date": "2025-06-11 16:01:03",
        "commit_id": "18bf6addc47",
        "message": "set_grad_enabled add str and repr for prints (#155681)",
        "index": "083890",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.786730331449387e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-11 21:27:43",
        "commit_id": "bc3972b80a7",
        "message": "[reland] Add stack_trace on make_fx (#155486)",
        "index": "083922",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.8926418952145436e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-12 21:33:52",
        "commit_id": "db01f1032ff",
        "message": "Support XPU in memory tracker (#150703)",
        "index": "083995",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.892159834301134e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-13 06:14:22",
        "commit_id": "60204406835",
        "message": "remove allow-untyped-defs from adaround_fake_quantize.py (#155621)",
        "index": "084023",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 2,
                "withAmbiguousType": -1,
                "withUnknownType": -1
            },
            "completenessScore": 0.00012383900928791824
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-06-13 13:54:10",
        "commit_id": "b2fc9cfea16",
        "message": "[precompile] Add CompilePackage to serialize dynamo states. (#155118)",
        "index": "084032",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 25, "withUnknownType": 1},
            "missingFunctionDocStringCount": 8,
            "missingClassDocStringCount": 1
        },
        "symbols": {"added": 26}
    },
    {
        "committer_date": "2025-06-13 14:11:24",
        "commit_id": "3819584f12e",
        "message": "[precompile] Implement PrecompileContext for recording precompile artifacts, integrate with CompilePackage (#154415)",
        "index": "084033",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 3, "removed": 1}
    },
    {
        "committer_date": "2025-06-13 15:39:27",
        "commit_id": "a5938ff4312",
        "message": "[BE][c10d/Store]add check in pyi (#155855) (#155865)",
        "index": "084036",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-13 18:59:31",
        "commit_id": "4628f1b7a93",
        "message": "[Hierarchical-Compile] Track mutations for setitem (#155880)",
        "index": "084047",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-13 20:19:51",
        "commit_id": "bf798a2f016",
        "message": "Change _hfstorage to hfstorage (#155837)",
        "index": "084050",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 16, "withUnknownType": 6},
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 20},
            "missingFunctionDocStringCount": 16,
            "missingClassDocStringCount": 2,
            "completenessScore": 0.00048387726675086506,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 44}
    },
    {
        "committer_date": "2025-06-15 17:49:36",
        "commit_id": "54976bca103",
        "message": "[dynamo] Provide helper functions for guard filter hook (#155083)",
        "index": "084139",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 4},
            "completenessScore": -9.200366583461683e-05
        },
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-06-17 12:54:58",
        "commit_id": "0a0023d9840",
        "message": "Enable NCCL zero-copy (user buffer registration) for FSDP2 (#150564)",
        "index": "084213",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 2},
            "missingFunctionDocStringCount": 2
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-06-17 23:39:17",
        "commit_id": "38e1e5d54ce",
        "message": "Add get_pipeline_order() for Gpipe and 1F1B (#155935)",
        "index": "084250",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.8822351426714974e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-18 03:39:28",
        "commit_id": "9ed0060225a",
        "message": "Provide access to the cudaGraph_t underlying a CUDAGraph. (#155164)",
        "index": "084259",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "otherSymbolCounts": {"withKnownType": 3},
            "missingFunctionDocStringCount": 2,
            "missingDefaultParamCount": 1,
            "completenessScore": -4.59867288856719e-05
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-06-18 07:27:00",
        "commit_id": "920f6e681ec",
        "message": "[dynamo] add set_fullgraph decorator/context manager (#154289)",
        "index": "084268",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-18 07:27:09",
        "commit_id": "3c8c48f7934",
        "message": "[dynamo] fix set_fullgraph for nested calls (#154782)",
        "index": "084269",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-18 07:27:20",
        "commit_id": "a6a3a441442",
        "message": "[dynamo] raise hard error if error is encountered while tracing resume function prologue (#154564)",
        "index": "084271",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-18 14:19:39",
        "commit_id": "8f02161d101",
        "message": "Revert \"[dynamo] raise hard error if error is encountered while tracing resume function prologue (#154564)\"",
        "index": "084280",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-18 15:47:21",
        "commit_id": "408d9884b07",
        "message": "Revert \"[dynamo] fix set_fullgraph for nested calls (#154782)\"",
        "index": "084287",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": -1}, "missingFunctionDocStringCount": -1},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-18 15:51:06",
        "commit_id": "c5d3e7a4ff4",
        "message": "Revert \"[dynamo] add set_fullgraph decorator/context manager (#154289)\"",
        "index": "084288",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-18 18:57:47",
        "commit_id": "cbafba57941",
        "message": "Allow forcing FSDP2 to always use SUM reductions (#155915)",
        "index": "084298",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-19 02:00:08",
        "commit_id": "d4ad2804299",
        "message": "Enable querying the build and runtime NCCL versions (#156305)",
        "index": "084323",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 2}, "missingFunctionDocStringCount": 2},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-19 16:27:42",
        "commit_id": "6e185c53124",
        "message": "Upgrade to DLPack 1.0. (#145000)",
        "index": "084352",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 5, "withUnknownType": -1},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 0.00021702684135405104
        },
        "symbols": {"added": 7, "removed": 3}
    },
    {
        "committer_date": "2025-06-20 07:03:07",
        "commit_id": "2c372a05025",
        "message": "[dynamo] add set_fullgraph decorator/context manager (#154289)",
        "index": "084379",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-20 07:03:16",
        "commit_id": "537b0877a87",
        "message": "[dynamo] fix set_fullgraph for nested calls (#154782)",
        "index": "084380",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-20 07:03:29",
        "commit_id": "0aed855b2bd",
        "message": "[dynamo] raise hard error if error is encountered while tracing resume function prologue (#154564)",
        "index": "084382",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-20 15:32:47",
        "commit_id": "b4442f42a93",
        "message": "Revert \"Upgrade to DLPack 1.0. (#145000)\"",
        "index": "084385",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -5, "withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -0.00021702684135405104
        },
        "symbols": {"added": 3, "removed": 7}
    },
    {
        "committer_date": "2025-06-20 20:18:24",
        "commit_id": "754c04aa062",
        "message": "Revert \"[dynamo] raise hard error if error is encountered while tracing resume function prologue (#154564)\"",
        "index": "084406",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-20 23:54:57",
        "commit_id": "fbbab794ef6",
        "message": "[ONNX] Implement Attention-23 (#156431)",
        "index": "084412",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2989101149062385e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-21 03:55:28",
        "commit_id": "554b5680405",
        "message": "Add internal use only utility to allow externally visible side effects within HOPs (#155715)",
        "index": "084425",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-21 15:14:59",
        "commit_id": "fab85fc5f99",
        "message": "[compile][hierarchical compilation] Release nested_compile_region API (#156449)",
        "index": "084443",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.298625965579948e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-21 23:24:04",
        "commit_id": "f70c80105eb",
        "message": "Enables NCCL symmetric memory kernels through mempool registration (#155134)",
        "index": "084451",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "otherSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.8813639770651776e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-22 14:22:07",
        "commit_id": "c10eeb5bad7",
        "message": "Revert \"[dynamo] fix set_fullgraph for nested calls (#154782)\"",
        "index": "084473",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": -1}, "missingFunctionDocStringCount": -1},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-22 14:22:07",
        "commit_id": "5e56db59d46",
        "message": "Revert \"[dynamo] add set_fullgraph decorator/context manager (#154289)\"",
        "index": "084474",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-22 15:52:27",
        "commit_id": "54b8087f638",
        "message": "Improve torch.ops typing (#154555)",
        "index": "084477",
        "diagnostics": {"added": 64, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 3,
                "withAmbiguousType": 5,
                "withUnknownType": -8
            },
            "otherSymbolCounts": {
                "withKnownType": 16,
                "withAmbiguousType": 3,
                "withUnknownType": -14
            },
            "completenessScore": 0.00018539117538007854
        },
        "symbols": {"added": 8, "removed": 3}
    },
    {
        "committer_date": "2025-06-23 15:38:37",
        "commit_id": "2e9bd03f607",
        "message": "Implemented `Size.__radd__` (#152554)",
        "index": "084505",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-24 00:07:37",
        "commit_id": "5dd9652389e",
        "message": "Clean up HF components (#155707)",
        "index": "084536",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -11},
            "completenessScore": -0.0004270879508683212
        },
        "symbols": {"removed": 11}
    },
    {
        "committer_date": "2025-06-24 04:59:49",
        "commit_id": "17eb649d559",
        "message": "Implement guard collectives (optimized version) (#156562)",
        "index": "084551",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.2985085214921597e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-24 07:57:48",
        "commit_id": "35e44067c4d",
        "message": "Add unified memory APIs for torch.accelerator (#152932)",
        "index": "084559",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 14},
            "completenessScore": -0.00020500097727915723,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 17}
    },
    {
        "committer_date": "2025-06-24 15:41:34",
        "commit_id": "e2c9d8d6414",
        "message": "Fix non-bitwise type annotations for Tensor operators (see #145838) (#146845)",
        "index": "084568",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 9,
                "withAmbiguousType": 1,
                "withUnknownType": -10
            }
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-06-25 00:11:35",
        "commit_id": "6459a5c7a92",
        "message": "Revert \"Add unified memory APIs for torch.accelerator (#152932)\"",
        "index": "084596",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -3, "withUnknownType": -14},
            "completenessScore": 0.00020500097727915723,
            "filesAnalyzed": -1
        },
        "symbols": {"removed": 17}
    },
    {
        "committer_date": "2025-06-25 23:07:10",
        "commit_id": "204db27a0c4",
        "message": "Consolidate stack trace in Tracer (#156257)",
        "index": "084646",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.885400946074258e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-06-26 10:32:20",
        "commit_id": "53e0b9c3936",
        "message": "refine fp32 precision api (#125888)",
        "index": "084675",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 11},
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 4},
            "missingFunctionDocStringCount": 2,
            "missingClassDocStringCount": 2,
            "completenessScore": -0.00021379444528257796
        },
        "symbols": {"added": 18}
    },
    {
        "committer_date": "2025-06-26 21:40:38",
        "commit_id": "7b7eafe7ba1",
        "message": "[dynamo] add set_fullgraph decorator/context manager (#154289)",
        "index": "084696",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-26 21:40:38",
        "commit_id": "36666033aba",
        "message": "[dynamo] fix set_fullgraph for nested calls (#154782)",
        "index": "084697",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-26 21:40:38",
        "commit_id": "80d89974c17",
        "message": "[dynamo] raise hard error if error is encountered while tracing resume function prologue (#154564)",
        "index": "084700",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withAmbiguousType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-06-28 05:22:02",
        "commit_id": "5692cbb818f",
        "message": "[ONNX] Delete symbolic caffe2 (#157102)",
        "index": "084789",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -12, "withUnknownType": -8},
            "missingFunctionDocStringCount": -19,
            "completenessScore": -0.00028281981741584694,
            "filesAnalyzed": -1
        },
        "symbols": {"removed": 20}
    },
    {
        "committer_date": "2025-06-28 23:47:46",
        "commit_id": "836bb1941b5",
        "message": "[hop] support torch.func.functional_call in hop subgraph (#155886)",
        "index": "084805",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 3}},
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-06-29 03:19:48",
        "commit_id": "2796f31b5e3",
        "message": "[DCP] OSS Zero Overhead Checkpointing Implementation (#156207)",
        "index": "084808",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 25, "withUnknownType": 2},
            "missingFunctionDocStringCount": 1,
            "completenessScore": 0.0009251870717773003
        },
        "symbols": {"added": 27}
    },
    {
        "committer_date": "2025-06-30 16:58:06",
        "commit_id": "b54eac2a5ed",
        "message": "Upgrade to DLPack 1.0. (#145000)",
        "index": "084835",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 5, "withUnknownType": -1},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 0.00021685030707430109
        },
        "symbols": {"added": 7, "removed": 3}
    },
    {
        "committer_date": "2025-06-30 21:16:15",
        "commit_id": "f096820d0f8",
        "message": "[precompile] Detect source code changes for save/load. (#156432)",
        "index": "084849",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-06-30 23:54:40",
        "commit_id": "7709ff55123",
        "message": "[remove untyped defs] batch 1 (#157011)",
        "index": "084854",
        "diagnostics": {"added": 8, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 12, "withUnknownType": -12},
            "completenessScore": 0.0007410151908113782
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-01 00:30:48",
        "commit_id": "b60569ed946",
        "message": "HF - consolidate shards of safetensors files to full tensors in finish step (#156705)",
        "index": "084856",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 5},
            "completenessScore": 0.00019351830443004037
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-07-01 10:36:48",
        "commit_id": "a767e50adca",
        "message": "remove allow-untyped-defs from torch/fx/experimental/migrate_gradual_types/util.py (#157236)",
        "index": "084872",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 5, "withUnknownType": -5},
            "completenessScore": 0.0003086610284585567
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-01 15:46:34",
        "commit_id": "0f9c1b374fb",
        "message": "[dynamo] Ensure global state guard is preserved across serialization. (#157285)",
        "index": "084880",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-02 06:58:45",
        "commit_id": "0364db7cd14",
        "message": "[PT] support custom all_gather and reduce_scatter comms (#155189)",
        "index": "084910",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 8}},
        "symbols": {"added": 8}
    },
    {
        "committer_date": "2025-07-02 13:36:14",
        "commit_id": "bdb78191662",
        "message": "[dynamo, nested graph breaks] remove recursive cell/freevar in instruction tx (#154078)",
        "index": "084915",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-02 16:51:07",
        "commit_id": "156bc243f0e",
        "message": "Back out \"Include c++ stack traces when we hit constraint violation (#155603)\" (#157406)",
        "index": "084925",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.867504774413e-05
        },
        "symbols": {"added": 1, "removed": 2}
    },
    {
        "committer_date": "2025-07-02 20:24:24",
        "commit_id": "e20784f228a",
        "message": "[dynamo] Support BUILTIN_MATCH serialization. (#157016)",
        "index": "084938",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-03 22:23:04",
        "commit_id": "7081b8233a6",
        "message": "[BE] Accelerator agnostic timer.py (#157131)",
        "index": "084987",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": -1},
            "completenessScore": 2.3060005037489617e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-07 11:56:30",
        "commit_id": "e466dab164d",
        "message": "[WIP] Automatically load and save dynamo entries via caching_precompile (#155913)",
        "index": "085046",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 4}, "missingFunctionDocStringCount": 3},
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-07-07 16:53:35",
        "commit_id": "ae1094b72b7",
        "message": "Revert \"[WIP] Automatically load and save dynamo entries via caching_precompile (#155913)\"",
        "index": "085057",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -4}, "missingFunctionDocStringCount": -3},
        "symbols": {"removed": 4}
    },
    {
        "committer_date": "2025-07-07 20:57:30",
        "commit_id": "5c79a55e7e5",
        "message": "[oss] Add version to metadata (#155343)",
        "index": "085070",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.734724839830731e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-07-07 21:43:35",
        "commit_id": "ed6df0e3242",
        "message": "correctly import torch.version (#157584)",
        "index": "085071",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.866646241690308e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-07 23:57:17",
        "commit_id": "be56a8d7ac0",
        "message": "Automatically load and save dynamo entries via caching_precompile (#155913)",
        "index": "085079",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 4}, "missingFunctionDocStringCount": 3},
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-07-08 00:11:52",
        "commit_id": "9d8cf24b3be",
        "message": "remove allow-untyped-defs from torch/_classes.py (#157231)",
        "index": "085080",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1, "withUnknownType": -1},
            "otherSymbolCounts": {
                "withKnownType": 7,
                "withAmbiguousType": 1,
                "withUnknownType": -4
            },
            "missingClassDocStringCount": 1
        },
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-07-08 00:11:52",
        "commit_id": "60b41de0ca0",
        "message": "remove allow-untyped-defs from torch/ao/nn/quantized/modules/rnn.py (#157234)",
        "index": "085082",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.172839506174421e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-08 15:39:56",
        "commit_id": "5dc75f72d4e",
        "message": "Simplify the base classes of `_PyFutureMeta` (#157757)",
        "index": "085115",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}, "missingClassDocStringCount": -1},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-08 23:55:46",
        "commit_id": "1b3d69b59f9",
        "message": "Work: block_current_stream API (#156883)",
        "index": "085138",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": -1},
            "missingFunctionDocStringCount": 1
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-09 03:01:41",
        "commit_id": "c515385b0ac",
        "message": "Add Intel GPU info collection to the collect env script (#157351)",
        "index": "085146",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": 4},
            "missingFunctionDocStringCount": 4,
            "completenessScore": -5.3595712343035284e-05
        },
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-07-09 03:11:37",
        "commit_id": "8d070187e34",
        "message": "fix type hints for interpolation functions (#157202)",
        "index": "085147",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-09 14:27:51",
        "commit_id": "fcc682be4bd",
        "message": "[BE][Ez]: Fully type nn.utils.clip_grad (#154801)",
        "index": "085165",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 6, "withUnknownType": -6},
            "completenessScore": 0.0003702560937982047
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-09 21:12:25",
        "commit_id": "163f0d8f2ab",
        "message": "[BE][Ez]: Auto add return type annotations for methods in torch/nn/module (#157925)",
        "index": "085181",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 6, "withUnknownType": -6},
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 0.0003702560937982602
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-09 22:07:50",
        "commit_id": "a1dad2f2d2c",
        "message": "[BE][Ez]: Autotype torch/profiler with ruff ANN (#157923)",
        "index": "085184",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 8, "withUnknownType": -8},
            "otherSymbolCounts": {"withKnownType": 9, "withUnknownType": -9},
            "completenessScore": 0.0004936747917309026
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-10 02:40:25",
        "commit_id": "3404c1f0cfe",
        "message": "[HF][DCP] Upload local consolidated files to remote storage if needed (#157371)",
        "index": "085196",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.85731028649805e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-10 06:52:22",
        "commit_id": "ba0d0de5e65",
        "message": "Enable set SDPA backend by torch.nn.attention.sdpa_kernel on XPU (#156669)",
        "index": "085213",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-10 22:44:34",
        "commit_id": "9bf41633d76",
        "message": "Allow Custom Time Unit When Printing Profiler Table (#157913)",
        "index": "085247",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-11 06:16:38",
        "commit_id": "b4fc42ca807",
        "message": "Add `torch.segment_reduce` docs (#154352)",
        "index": "085272",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-11 23:09:50",
        "commit_id": "2a8795a981c",
        "message": "[c10d] ProcessGroupGloo: support per operation timeouts (#158128)",
        "index": "085308",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}, "missingFunctionDocStringCount": 2},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-07-12 00:06:37",
        "commit_id": "0d77364ee3f",
        "message": "dist2: cleanup non-option methods on PG (missing, timeouts) (#158123)",
        "index": "085311",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1, "missingDefaultParamCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-12 01:02:17",
        "commit_id": "627ba411366",
        "message": "[DCP][HF] [ez]Change where sharded tensors are saved (#158069)",
        "index": "085316",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.313339100845635e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-12 02:30:47",
        "commit_id": "2eff14c4455",
        "message": "[ONNX] Delete torch.onnx.dynamo_export (#158130)",
        "index": "085319",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -3, "withUnknownType": -1},
            "completenessScore": -9.260020127566104e-05
        },
        "symbols": {"removed": 4}
    },
    {
        "committer_date": "2025-07-12 06:25:46",
        "commit_id": "6b84cb29f97",
        "message": "[dynamo] trace through torch.get_device_module (#157980)",
        "index": "085327",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-12 15:42:12",
        "commit_id": "9508d73307b",
        "message": "remove allow-untyped-defs from torch/ao/nn/intrinsic/quantized/dynamic/modules/linear_relu.py (#157848)",
        "index": "085332",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2, "withUnknownType": -2},
            "completenessScore": 0.00012343393198788188
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-07-14 21:04:12",
        "commit_id": "6b2bef10afa",
        "message": "[c10d] Prototype of `group_split` for dist2 work (#157716)",
        "index": "085358",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-15 00:50:06",
        "commit_id": "1c6057fd179",
        "message": "add eq function to NodeSource (#158170)",
        "index": "085369",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.3138149124468654e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-15 17:46:43",
        "commit_id": "b7b1109f49f",
        "message": "Expose opt_einsum in torch.backends (#157740)",
        "index": "085396",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.857405552210036e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-15 19:14:06",
        "commit_id": "5606c516fd8",
        "message": "[ONNX] Remove legacy Dort (#158258)",
        "index": "085408",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.857405552210036e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-15 19:31:00",
        "commit_id": "011026205a9",
        "message": "make node source hashable (#158322)",
        "index": "085410",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.313529344427634e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-15 19:49:38",
        "commit_id": "250ae2531c5",
        "message": "Fix types in graphs.py (#158192)",
        "index": "085411",
        "diagnostics": {"added": 7, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 18, "withUnknownType": -18},
            "otherSymbolCounts": {"withKnownType": 3},
            "missingClassDocStringCount": 1,
            "completenessScore": 0.0011107682813946695
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-07-15 23:48:20",
        "commit_id": "651b4a68f2a",
        "message": "[hop][dynamo] track run-ahead sym variables in side effects (#158273)",
        "index": "085425",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {},
        "symbols": {"added": 1, "removed": 1}
    },
    {
        "committer_date": "2025-07-16 06:06:29",
        "commit_id": "54848905398",
        "message": "Add better typing to avaialbe kernel options for flex attention (#158383)",
        "index": "085440",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 7, "withUnknownType": 18},
            "completenessScore": -0.00014786670248317924
        },
        "symbols": {"added": 25}
    },
    {
        "committer_date": "2025-07-16 17:26:20",
        "commit_id": "82b1c482929",
        "message": "[hop] add supports_higher_order_operators flag to TorchDispatchMode (#158077)",
        "index": "085466",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-16 17:26:20",
        "commit_id": "da05b7fb94f",
        "message": "[cond] add _FlopCounterMode support for cond  (#158067)",
        "index": "085467",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-16 19:33:57",
        "commit_id": "f58a680d09e",
        "message": "[c10d]Prototype of remote_group_merge (#158287)",
        "index": "085475",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-16 22:09:01",
        "commit_id": "5951fcd50ac",
        "message": "[Dynamo][Better Engineering] Support typing in codegen.py (#158386)",
        "index": "085484",
        "diagnostics": {"added": 4, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 46, "withUnknownType": -30},
            "missingFunctionDocStringCount": 2,
            "missingClassDocStringCount": 1
        },
        "symbols": {"added": 16}
    },
    {
        "committer_date": "2025-07-16 23:48:45",
        "commit_id": "1d584761622",
        "message": "[PP] Add eval() API to schedule (#157795)",
        "index": "085489",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-17 01:56:01",
        "commit_id": "2ad5c25cfc6",
        "message": "Add unified memory APIs for torch.accelerator (#152932)",
        "index": "085500",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 14},
            "completenessScore": -0.00020861711955089124,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 17}
    },
    {
        "committer_date": "2025-07-17 05:56:07",
        "commit_id": "1a4268b8113",
        "message": "[BE] remove torch deploy - conditionals (#158288)",
        "index": "085507",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.8431701376961946e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-17 05:56:26",
        "commit_id": "0b9fb91f17e",
        "message": "[BE] Remove __reduce_deploy__ (#158291)",
        "index": "085509",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -2},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 4.6244785487425943e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-07-17 15:40:36",
        "commit_id": "2ecf083b724",
        "message": "Add torch compile force disable caches alias (#158072)",
        "index": "085532",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.84335861794427e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-17 23:31:26",
        "commit_id": "b0e325c2c85",
        "message": "[Dynamo][Better Engineering] Add type coverage to decorators (#158509)",
        "index": "085560",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "otherSymbolCounts": {
                "withKnownType": 65,
                "withAmbiguousType": 1,
                "withUnknownType": 12
            },
            "missingFunctionDocStringCount": 1,
            "missingClassDocStringCount": 12,
            "completenessScore": 7.685297887610743e-05
        },
        "symbols": {"added": 80}
    },
    {
        "committer_date": "2025-07-18 02:18:43",
        "commit_id": "89d842fec52",
        "message": "Make torch.distributed.breakpoint() set a long timeout (#158481)",
        "index": "085569",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-18 04:58:24",
        "commit_id": "9a7c2f1f64b",
        "message": "Revert \"Add torch compile force disable caches alias (#158072)\"",
        "index": "085573",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.842412414878371e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-18 20:54:19",
        "commit_id": "e3351b3ddff",
        "message": "Revert \"[DCP][HF] [ez]Change where sharded tensors are saved (#158069)\"",
        "index": "085609",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "completenessScore": 2.3128547550321787e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-19 07:27:15",
        "commit_id": "f73594164a3",
        "message": "[BE] document Adadelta and Adagrad APIs properly (#158483)",
        "index": "085634",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-20 00:46:20",
        "commit_id": "a10f15718d9",
        "message": "[DLPack] Add support for missing keyword-arguments. (#150218)",
        "index": "085641",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-20 22:52:54",
        "commit_id": "4b02bd76d3e",
        "message": "DCP safetensors test fix (#158685)",
        "index": "085647",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.3128547550321787e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-21 19:17:01",
        "commit_id": "22920c9138f",
        "message": "Grab bag of (mostly) typing improvements (#158075)",
        "index": "085673",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.312570043422335e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-21 19:34:14",
        "commit_id": "ea5b06ed5bc",
        "message": "[Dynamo][BetterEngineering] Type side_effects.py (#158605)",
        "index": "085675",
        "diagnostics": {"added": 34, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 19,
                "withAmbiguousType": 2,
                "withUnknownType": 69
            },
            "missingFunctionDocStringCount": 66,
            "missingClassDocStringCount": 1
        },
        "symbols": {"added": 90}
    },
    {
        "committer_date": "2025-07-21 23:17:38",
        "commit_id": "920f26c7617",
        "message": "Revert \"[BE] Remove __reduce_deploy__ (#158291)\"",
        "index": "085702",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -4.624286162285829e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-07-21 23:17:39",
        "commit_id": "ee5a434f8ce",
        "message": "Revert \"[BE] remove torch deploy - conditionals (#158288)\"",
        "index": "085704",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.842129929892968e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-21 23:42:44",
        "commit_id": "2c37acfd891",
        "message": "[AOTI][CPU] Consider bias=None case for fbgemm_linear_fp16_weight (#158535)",
        "index": "085709",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-22 01:01:41",
        "commit_id": "63413113332",
        "message": "Revert \"Add unified memory APIs for torch.accelerator (#152932)\"",
        "index": "085712",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -3, "withUnknownType": -14},
            "completenessScore": 0.0002086348321794218,
            "filesAnalyzed": -1
        },
        "symbols": {"removed": 17}
    },
    {
        "committer_date": "2025-07-22 19:58:48",
        "commit_id": "37ded2ac906",
        "message": "Using torch.accelerator in comm_mode_features_example.py and visualize_sharding_example.py (#157317)",
        "index": "085744",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.3155164625143776e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-23 20:27:28",
        "commit_id": "ab26d4fbeb5",
        "message": "[BE] remove torch deploy - conditionals (#158288)",
        "index": "085800",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.844774303207732e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-23 20:27:28",
        "commit_id": "9c68c4d08f4",
        "message": "[BE] Remove __reduce_deploy__ (#158291)",
        "index": "085802",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -2},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 4.63112980859659e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-07-23 22:28:03",
        "commit_id": "7f649ed4f83",
        "message": "Add basic torch.hash_tensor op (#154149)",
        "index": "085813",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "otherSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.3157075586144327e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-07-24 15:55:18",
        "commit_id": "abcb24f4de1",
        "message": "[Dynamo][Better Engineering] Add typing annotations to guard and source (#158397)",
        "index": "085848",
        "diagnostics": {"added": 11, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 12, "withUnknownType": -12},
            "otherSymbolCounts": {
                "withKnownType": 116,
                "withAmbiguousType": 15,
                "withUnknownType": -65
            },
            "missingClassDocStringCount": 3,
            "completenessScore": 0.0007392804337111869
        },
        "symbols": {"added": 66}
    },
    {
        "committer_date": "2025-07-24 21:37:11",
        "commit_id": "e20736bf1d4",
        "message": "Dont't GC as often when collecting cudagraphs (#158193)",
        "index": "085867",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.840314333314332e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-25 04:01:51",
        "commit_id": "9b29166f57c",
        "message": "[ROCm] add flag torch.backends.miopen.immediate (#158951)",
        "index": "085885",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 4},
            "missingFunctionDocStringCount": 2,
            "missingClassDocStringCount": 1,
            "completenessScore": 2.238415998062626e-05,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 7}
    },
    {
        "committer_date": "2025-07-25 05:24:09",
        "commit_id": "02ca965560e",
        "message": "Device agnostic for DCP (#158337)",
        "index": "085891",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {},
        "symbols": {"added": 1, "removed": 1}
    },
    {
        "committer_date": "2025-07-25 13:22:32",
        "commit_id": "bf311141d6b",
        "message": "Track descriptors for all inputs/outputs of AOTAutograd traced graph (#158624)",
        "index": "085900",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-25 16:09:39",
        "commit_id": "a9f6770edd8",
        "message": "Revert \"[BE] Remove __reduce_deploy__ (#158291)\"",
        "index": "085907",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 2},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -4.638130298934007e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-07-25 16:09:39",
        "commit_id": "f8fafdc7a6d",
        "message": "Revert \"[BE] remove torch deploy - conditionals (#158288)\"",
        "index": "085909",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.8378613539780115e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-25 21:19:49",
        "commit_id": "7ef3c3357d8",
        "message": "NUMA binding integration with elastic agent and torchrun (#149334)",
        "index": "085938",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 18,
                "withAmbiguousType": 1,
                "withUnknownType": 1
            },
            "missingClassDocStringCount": 1,
            "completenessScore": 0.0006436025839182125,
            "filesAnalyzed": 2
        },
        "symbols": {"added": 20}
    },
    {
        "committer_date": "2025-07-25 22:03:55",
        "commit_id": "9e8f27cc795",
        "message": "[BE] Make torch.nn.modules.* satisfy the docs coverage test (#158491)",
        "index": "085942",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -134},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-25 22:03:55",
        "commit_id": "1e79872f2e8",
        "message": "[BE] More torch.nn docs coverage test (except for torch.nn.parallel) (#158654)",
        "index": "085943",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-26 08:16:34",
        "commit_id": "cd68559d045",
        "message": "[Inductor] Support native Inductor as backend for MTIA (#158526)",
        "index": "085960",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 3},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -6.95865292273945e-05
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-07-26 17:58:00",
        "commit_id": "fe0ff12dab7",
        "message": "Revert \"[Inductor] Support native Inductor as backend for MTIA (#158526)\"",
        "index": "085966",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -3},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 6.95865292273945e-05
        },
        "symbols": {"removed": 3}
    },
    {
        "committer_date": "2025-07-28 17:36:29",
        "commit_id": "2d1e92307d3",
        "message": "Partitioner: Fix to align partition node order with original graph (#157892)",
        "index": "085994",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-29 03:27:11",
        "commit_id": "67e68e07852",
        "message": "[c10d] Cleanup split_group logic using the newly built splitGroup (#158488)",
        "index": "086013",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-29 17:03:24",
        "commit_id": "c55e72bea14",
        "message": "[Re-land][Inductor] Support native Inductor as backend for MTIA (#159211)",
        "index": "086028",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 3},
            "missingFunctionDocStringCount": 1,
            "completenessScore": -6.95865292273945e-05
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-07-29 17:40:49",
        "commit_id": "6162e650b0e",
        "message": "[BE] remove torch deploy - conditionals (#158288)",
        "index": "086031",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.828905164821039e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-07-29 19:49:40",
        "commit_id": "d987a6f7f00",
        "message": "Revert \"[Dynamo][Better Engineering] Add typing annotations to guard and source (#158397)\"",
        "index": "086041",
        "diagnostics": {"added": 113, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -12, "withUnknownType": 12},
            "otherSymbolCounts": {
                "withKnownType": -117,
                "withAmbiguousType": -15,
                "withUnknownType": 65
            },
            "missingClassDocStringCount": -3,
            "completenessScore": -0.0007377805102982138
        },
        "symbols": {"removed": 67}
    },
    {
        "committer_date": "2025-07-29 20:41:45",
        "commit_id": "c0c24b61ff4",
        "message": "Revert \"Partitioner: Fix to align partition node order with original graph (#157892)\"",
        "index": "086044",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-07-30 01:36:03",
        "commit_id": "b57d1ef110b",
        "message": "[BE] Remove __reduce_deploy__ (#158291)",
        "index": "086062",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -2},
            "missingFunctionDocStringCount": -1,
            "completenessScore": 4.629557958307773e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-07-30 18:55:47",
        "commit_id": "73ee3233807",
        "message": "[ONNX] RMS Norm (#159377)",
        "index": "086100",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-30 22:57:50",
        "commit_id": "2b1ae29960e",
        "message": "[Dynamo][Better Engineering] Add typing annotations to guard and source (#158397) (#159491)",
        "index": "086115",
        "diagnostics": {"added": 11, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 12, "withUnknownType": -12},
            "otherSymbolCounts": {
                "withKnownType": 117,
                "withAmbiguousType": 15,
                "withUnknownType": -65
            },
            "missingClassDocStringCount": 3,
            "completenessScore": 0.0007378712414683464
        },
        "symbols": {"added": 67}
    },
    {
        "committer_date": "2025-07-30 23:14:31",
        "commit_id": "de7376537f2",
        "message": "Fix ep deepcopy when there is python builitin name (#159478)",
        "index": "086117",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.3194581419083704e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-07-31 20:20:53",
        "commit_id": "b1fb552974a",
        "message": "Revert \"Fix ep deepcopy when there is python builitin name (#159478)\"",
        "index": "086160",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "completenessScore": 2.3194581419083704e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-01 20:22:30",
        "commit_id": "5e8b95605f5",
        "message": "[PP] Support OVERLAP_F_B computation type (#158978)",
        "index": "086202",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "otherSymbolCounts": {"withKnownType": 1},
            "completenessScore": -2.3194581419083704e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-02 23:23:17",
        "commit_id": "a29ed5e1acc",
        "message": "Add torch compile force disable caches alias (#158072)",
        "index": "086234",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.828997985738658e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-04 21:51:53",
        "commit_id": "a7f3bdf5506",
        "message": "[Dynamo][Better Engineering] Type coverage for `torch/_dynamo/utils.py` (#159580)",
        "index": "086277",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"exportedSymbolCounts": {"withAmbiguousType": 1, "withUnknownType": -1}},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-04 22:40:33",
        "commit_id": "fd6655a0f5e",
        "message": "Feature: Implement support for `cudnn_batch_norm_out` kernel to replace the autogen approach. (#123020)",
        "index": "086278",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-05 03:50:54",
        "commit_id": "b6c53383fe2",
        "message": "[Dynamo][Better Engineering] Type annotation for `torch/_dynamo/output_graph.py` (#159602)",
        "index": "086300",
        "diagnostics": {"added": 20, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 91,
                "withAmbiguousType": 3,
                "withUnknownType": -37
            },
            "missingFunctionDocStringCount": 10,
            "missingClassDocStringCount": 3
        },
        "symbols": {"added": 57}
    },
    {
        "committer_date": "2025-08-05 12:44:14",
        "commit_id": "aeb5321b636",
        "message": "Allow controlling PG backend and options via init_device_mesh (#159371)",
        "index": "086307",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-05 22:26:48",
        "commit_id": "fb35a9ea4ac",
        "message": "[export] Improve error messages (#159881)",
        "index": "086322",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.828527188004527e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-06 02:22:18",
        "commit_id": "15f1173e5d7",
        "message": "Add unified memory APIs for torch.accelerator (#152932)",
        "index": "086334",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 14},
            "completenessScore": -0.00020966227960494965,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 17}
    },
    {
        "committer_date": "2025-08-06 02:26:10",
        "commit_id": "8ce81bcee1d",
        "message": "[Torch Package] Make get names of OrderedImporters support fallback to importers (#155743)",
        "index": "086336",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": 1.509605273669612e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-06 21:52:14",
        "commit_id": "40c4d61f9ab",
        "message": "[Dynamo][Better Engineering] Typing `torch/_dynamo/guards.py` (#159315)",
        "index": "086376",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 88,
                "withAmbiguousType": 3,
                "withUnknownType": 73
            },
            "missingFunctionDocStringCount": 107,
            "missingClassDocStringCount": 9
        },
        "symbols": {"added": 164}
    },
    {
        "committer_date": "2025-08-06 22:12:47",
        "commit_id": "2507ae63f29",
        "message": "Partitioner: Fix to align partition node order with original graph (#157892)",
        "index": "086377",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withAmbiguousType": -1},
            "completenessScore": 6.14062020264372e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-08-07 16:34:36",
        "commit_id": "74da2604c9d",
        "message": "Revert \"Add unified memory APIs for torch.accelerator (#152932)\"",
        "index": "086409",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -3, "withUnknownType": -14},
            "completenessScore": 0.00020971644814266055,
            "filesAnalyzed": -1
        },
        "symbols": {"removed": 17}
    },
    {
        "committer_date": "2025-08-07 17:22:54",
        "commit_id": "69cc606fda9",
        "message": "HF component update to not use fsspec components (#159405)",
        "index": "086416",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": -2, "withUnknownType": -20},
            "missingFunctionDocStringCount": -11,
            "missingClassDocStringCount": -2
        },
        "symbols": {"removed": 22}
    },
    {
        "committer_date": "2025-08-08 17:41:22",
        "commit_id": "84f7e88aef0",
        "message": "Add unified memory APIs for torch.accelerator (#152932)",
        "index": "086460",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 14},
            "completenessScore": -0.00020971644814266055,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 17}
    },
    {
        "committer_date": "2025-08-09 00:09:45",
        "commit_id": "9b803cdbe29",
        "message": "[BE] Remove more optim entries from docs coverage ignore list (#160194)",
        "index": "086477",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": -1},
            "missingFunctionDocStringCount": -2,
            "completenessScore": 2.3161194598719792e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-12 09:37:03",
        "commit_id": "f990490a238",
        "message": "Add `label_smoothing` param in `nn.BCELoss` and `nn.BCEWithLogitsLoss` (#150282)",
        "index": "086562",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.648531818243987e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-12 20:08:49",
        "commit_id": "7e913949557",
        "message": "Support NUMA Binding for Callable Entrypoints (#160163)",
        "index": "086581",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2, "withUnknownType": -1},
            "completenessScore": 9.963427645609535e-05
        },
        "symbols": {"added": 19, "removed": 18}
    },
    {
        "committer_date": "2025-08-12 20:14:18",
        "commit_id": "8e6a3138581",
        "message": "Add ownership token when needed on GradientEdge (#160098)",
        "index": "086582",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.3167741505125683e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-13 09:01:52",
        "commit_id": "641ee747815",
        "message": "Revert \"Add `label_smoothing` param in `nn.BCELoss` and `nn.BCEWithLogitsLoss` (#150282)\"",
        "index": "086625",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -2},
            "completenessScore": -7.646653495096967e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-08-13 16:20:28",
        "commit_id": "6ee175195ac",
        "message": "[DCP][OSS] Rank local checkpointing in DCP without collectives (#147758)",
        "index": "086638",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 3},
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": -1},
            "completenessScore": -6.948060765410435e-05
        },
        "symbols": {"added": 5, "removed": 1}
    },
    {
        "committer_date": "2025-08-13 21:00:59",
        "commit_id": "1196bb1c2e4",
        "message": "Add utility to get computed kernel in torch.library (#158393)",
        "index": "086649",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "otherSymbolCounts": {"withKnownType": 2, "withUnknownType": 5},
            "missingFunctionDocStringCount": 4,
            "missingClassDocStringCount": 2,
            "completenessScore": -2.315451557710624e-05
        },
        "symbols": {"added": 8}
    },
    {
        "committer_date": "2025-08-13 23:05:29",
        "commit_id": "6da11d9aafc",
        "message": "[C10D] Add check_rng_sync util (#160283)",
        "index": "086655",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.3151672962740122e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-14 00:05:17",
        "commit_id": "a06ec54d400",
        "message": "[MPS] Add API to query GPU core count (#160414)",
        "index": "086660",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.645728195387891e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-14 03:34:04",
        "commit_id": "194fcfcfbda",
        "message": "Add support for param mutation under inference mode (#159661)",
        "index": "086670",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.643851367356014e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-14 14:58:35",
        "commit_id": "198b5fd2d47",
        "message": "[PP] Add DualPipeV schedule (#159591)",
        "index": "086688",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": 2,
                "withAmbiguousType": 5,
                "withUnknownType": 2
            },
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 1},
            "completenessScore": -8.560125338724633e-05
        },
        "symbols": {"added": 11}
    },
    {
        "committer_date": "2025-08-15 04:06:17",
        "commit_id": "858fb80b9b2",
        "message": "[PT2]: Add Static Dispatch Kernel for wrapped_fbgemm_linear_fp16_weight (#160451)",
        "index": "086738",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -2},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-15 04:59:35",
        "commit_id": "aa99e0958f7",
        "message": "Separate provenance tracking to different levels (#160383)",
        "index": "086740",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withAmbiguousType": 1},
            "completenessScore": -2.313450150903673e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-16 20:44:40",
        "commit_id": "f019da2979a",
        "message": "Implement `list(UserDefinedObject)` via `force_unpack_var_sequence` (#159864)",
        "index": "086798",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 1},
            "missingFunctionDocStringCount": 2
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-17 17:54:55",
        "commit_id": "63e1b58a134",
        "message": "[easy] [Precompile] Refactor guards, improve typing (#160530)",
        "index": "086807",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-18 01:41:08",
        "commit_id": "075a2e69678",
        "message": "[PGO] add extra read/write keys (#160715)",
        "index": "086809",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.638622522798677e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-18 17:04:17",
        "commit_id": "4014672b30f",
        "message": "Replace guard_serialization_mode with save_guards, remove load cases (#160531)",
        "index": "086828",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-19 10:54:08",
        "commit_id": "284b7190054",
        "message": "Remove the uncessary empty file (#160728)",
        "index": "086876",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"filesAnalyzed": -2},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-20 01:24:31",
        "commit_id": "54cc63b467f",
        "message": "[BE][Dynamo] Type coverage for symbolic_convert (#160922)",
        "index": "086915",
        "diagnostics": {"added": 10, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 190,
                "withAmbiguousType": 2,
                "withUnknownType": -74
            },
            "missingFunctionDocStringCount": 80,
            "missingClassDocStringCount": 5
        },
        "symbols": {"added": 118}
    },
    {
        "committer_date": "2025-08-20 07:51:09",
        "commit_id": "0533ff2ccba",
        "message": "[rfc] add hint_override kwarg to mark_dynamic (#161007)",
        "index": "086923",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-20 15:31:33",
        "commit_id": "90ea9ccefe3",
        "message": "Revert \"[rfc] add hint_override kwarg to mark_dynamic (#161007)\"",
        "index": "086927",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-20 17:37:26",
        "commit_id": "5255e65c01b",
        "message": "[dynamo] Refactor convert_frame to remove usage of nonlocal tracer output return. [4/n] (#160899)",
        "index": "086935",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-21 02:22:52",
        "commit_id": "9a415701991",
        "message": "[rfc] add hint_override kwarg to mark_dynamic (#161007)",
        "index": "086965",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-21 10:47:03",
        "commit_id": "18271148d32",
        "message": "[dist] expose unsafe_get_ptr for dist.ProcessGroupNCCL.NCCLConfig (#161136)",
        "index": "086979",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-21 14:23:13",
        "commit_id": "3caddd4daa5",
        "message": "[ROCm] SDPA fix mem fault when dropout is enabled (#154864)",
        "index": "086980",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.818608665512313e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-21 18:20:42",
        "commit_id": "96682103026",
        "message": "Allow bypasses for Precompile when guards, etc. cannot be serialized (#160902)",
        "index": "086986",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 2}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-21 23:58:02",
        "commit_id": "46429be7232",
        "message": "[DCP][HF] Add option to parallelize reads in HF Storage Reader (#160205)",
        "index": "087003",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.818140383127222e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-22 09:03:35",
        "commit_id": "9b4adc4db74",
        "message": "[fr] [xpu] Add FlightRecorder support for ProcessGroupXCCL (#158568)",
        "index": "087022",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingClassDocStringCount": 1},
        "symbols": {"added": 5, "removed": 4}
    },
    {
        "committer_date": "2025-08-22 21:40:03",
        "commit_id": "4c36c8a9946",
        "message": "[dynamo] Support method calls on complex ConstantVariables (#161122)",
        "index": "087048",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": -1}, "missingFunctionDocStringCount": -1},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-22 22:15:27",
        "commit_id": "419a2dbf5f6",
        "message": "[ONNX] Remove enable_fake_mode and exporter_legacy (#161222)",
        "index": "087051",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.818140383127222e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-23 07:20:58",
        "commit_id": "cd31be28ec5",
        "message": "Reland D80238201: [Torch.Export] Add flat arg paths in error message (#160919)",
        "index": "087068",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.818140383127222e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-23 07:23:22",
        "commit_id": "33346b58148",
        "message": "Support NUMA Binding for Callable Entrypoints, Take 2 (#161183)",
        "index": "087070",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {},
        "symbols": {"added": 2, "removed": 2}
    },
    {
        "committer_date": "2025-08-24 08:03:04",
        "commit_id": "74280d09132",
        "message": "[muon] Introduce Muon optimizer to PyTorch (#160213)",
        "index": "087075",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 2},
            "missingClassDocStringCount": 2,
            "completenessScore": -2.313535661058186e-05
        },
        "symbols": {"added": 4}
    },
    {
        "committer_date": "2025-08-25 03:09:32",
        "commit_id": "726dce3c944",
        "message": "[nccl symm mem] don't use arg for mempool, correctly use symmetric registration in hooks (#161238)",
        "index": "087076",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "otherSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.818048127030016e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-08-25 14:53:54",
        "commit_id": "1113e7de30d",
        "message": "[dynamo] Refactor convert_frame.compile_frame to be self contained function. [5/n] (#160900)",
        "index": "087087",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-25 18:56:18",
        "commit_id": "3e210f90c2c",
        "message": "Revert \"[dynamo] Refactor convert_frame.compile_frame to be self contained function. [5/n] (#160900)\"",
        "index": "087102",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-25 20:57:37",
        "commit_id": "cf94cadbeee",
        "message": "[CUDAGraph] Add getter for cuda graph exec (#161294)",
        "index": "087105",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "otherSymbolCounts": {"withKnownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": 3.818048127030016e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-25 23:16:21",
        "commit_id": "447d34b5f80",
        "message": "[dynamo] Refactor convert_frame.compile_frame to be self contained function. [5/n] (#160900)",
        "index": "087113",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-26 00:57:39",
        "commit_id": "2df9b437e37",
        "message": "[dynamo, nested graph breaks] implement new resume frame stack/locals/cell layout convention (#157971)",
        "index": "087120",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -3}, "missingFunctionDocStringCount": -3},
        "symbols": {"removed": 3}
    },
    {
        "committer_date": "2025-08-26 00:57:58",
        "commit_id": "9a756c2d710",
        "message": "[dynamo, nested graph breaks] add nested graph break tests (#144516)",
        "index": "087122",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-26 00:58:28",
        "commit_id": "ef0ef6f93f7",
        "message": "[dynamo, nested graph breaks] support nested closures (#159817)",
        "index": "087125",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-26 01:15:42",
        "commit_id": "089ad1d88bf",
        "message": "[1/n][export] Refactor PT2 Archive weight saving and loading (#160394)",
        "index": "087128",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.634691871472032e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-26 12:45:59",
        "commit_id": "e795450a35b",
        "message": "Revert \"[dynamo] Refactor convert_frame.compile_frame to be self contained function. [5/n] (#160900)\"",
        "index": "087146",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-26 17:06:54",
        "commit_id": "ba6ce66698f",
        "message": "[dynamo] lift backed symint output of item() (#161198)",
        "index": "087153",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {},
        "symbols": {"added": 1, "removed": 1}
    },
    {
        "committer_date": "2025-08-26 17:38:49",
        "commit_id": "f0e0a6897ee",
        "message": "type misc init and tools for dynamo (#161293)",
        "index": "087156",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {
                "withKnownType": 56,
                "withAmbiguousType": 17,
                "withUnknownType": -73
            }
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-08-26 19:16:05",
        "commit_id": "74124d1b467",
        "message": "[reland] [dynamo] Refactor convert_frame.compile_frame to be self contained function. [5/n] (#161514)",
        "index": "087161",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-26 20:03:59",
        "commit_id": "9f6e1b8730d",
        "message": "Revert \"[ROCm] SDPA fix mem fault when dropout is enabled (#154864)\"",
        "index": "087166",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.817111900672465e-05
        },
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-26 20:13:33",
        "commit_id": "a7aa480e55e",
        "message": "Revert \"[dynamo, nested graph breaks] support nested closures (#159817)\"",
        "index": "087167",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-26 20:40:17",
        "commit_id": "6686974ddd7",
        "message": "Revert \"[dynamo, nested graph breaks] add nested graph break tests (#144516)\"",
        "index": "087171",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}, "missingFunctionDocStringCount": -1},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-08-27 00:05:20",
        "commit_id": "dbc903a94a4",
        "message": "[APS IR] Minfor fix - use GetAttrKey in get_keystr to match with flat args path in unflatten (#161453)",
        "index": "087182",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-08-27 03:00:56",
        "commit_id": "8b78ba07b14",
        "message": "[dynamo, nested graph breaks] add nested graph break tests (#144516)",
        "index": "087194",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-27 09:55:31",
        "commit_id": "3d406429b0a",
        "message": "[dynamo][vllm] Support typing.get_type_hints (#161362)",
        "index": "087199",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 2},
            "missingFunctionDocStringCount": 2
        },
        "symbols": {"added": 3}
    },
    {
        "committer_date": "2025-08-27 21:26:25",
        "commit_id": "c36d18d7e86",
        "message": "[rfc] aot precompile with custom backend api (#161383)",
        "index": "087227",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "otherSymbolCounts": {"withKnownType": 10},
            "missingClassDocStringCount": 1,
            "completenessScore": -2.313344205262524e-05
        },
        "symbols": {"added": 11}
    },
    {
        "committer_date": "2025-08-27 21:53:37",
        "commit_id": "d0a242e5472",
        "message": "[dynamo, nested graph breaks] support nested closures (#159817)",
        "index": "087238",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {"otherSymbolCounts": {"withUnknownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-28 00:12:13",
        "commit_id": "97a548b640f",
        "message": "[PGO] skip allowlist logging for empty graphs (#161530)",
        "index": "087250",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}, "missingFunctionDocStringCount": 1},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-08-28 01:15:58",
        "commit_id": "768a1017c55",
        "message": "Allow parallel start NUMA binding (#161576)",
        "index": "087254",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -1},
            "completenessScore": -3.817487748630777e-05
        },
        "symbols": {"added": 1, "removed": 2}
    },
    {
        "committer_date": "2025-08-28 02:41:33",
        "commit_id": "5edc3d814f4",
        "message": "Add option for TorchDispatchMode to ignore torch.compile internals (#161648)",
        "index": "087261",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1, "withUnknownType": 1}},
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-28 07:59:29",
        "commit_id": "196232bb935",
        "message": "kill allow_complex_guards_as_runtime_asserts (#160198)",
        "index": "087275",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -2},
            "completenessScore": -7.636379932030035e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-08-28 15:40:37",
        "commit_id": "a8270dd1248",
        "message": "Revert \"kill allow_complex_guards_as_runtime_asserts (#160198)\"",
        "index": "087285",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.636379932030035e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-28 19:36:19",
        "commit_id": "69d91b94ba5",
        "message": "kill allow_complex_guards_as_runtime_asserts (#160198)",
        "index": "087296",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -2},
            "completenessScore": -7.636379932030035e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-08-28 22:50:37",
        "commit_id": "47742081c99",
        "message": "Revert \"kill allow_complex_guards_as_runtime_asserts (#160198)\"",
        "index": "087308",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2},
            "completenessScore": 7.636379932030035e-05
        },
        "symbols": {"added": 2}
    },
    {
        "committer_date": "2025-08-31 22:39:05",
        "commit_id": "9a665ca3c47",
        "message": "Add __init__.pyi to torch/linalg (#160750)",
        "index": "087400",
        "diagnostics": {"added": 150, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 2, "withAmbiguousType": -1},
            "otherSymbolCounts": {"withKnownType": 5, "withUnknownType": 4},
            "missingFunctionDocStringCount": 41,
            "missingClassDocStringCount": 2,
            "completenessScore": 9.947943854565766e-05
        },
        "symbols": {"added": 10}
    },
    {
        "committer_date": "2025-09-02 02:06:50",
        "commit_id": "13d66e2a66e",
        "message": "[BE][Easy] restore #157584 after #158288 (#158541)",
        "index": "087424",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.816643916620954e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-09-02 16:10:30",
        "commit_id": "524b78d4f67",
        "message": "[ONNX] Refactor torchscript based exporter (#161323)",
        "index": "087438",
        "diagnostics": {"added": 3, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {
                "withKnownType": -53,
                "withAmbiguousType": -3,
                "withUnknownType": -4
            },
            "otherSymbolCounts": {
                "withKnownType": 129,
                "withAmbiguousType": 6,
                "withUnknownType": 201
            },
            "missingFunctionDocStringCount": 295,
            "missingClassDocStringCount": -2,
            "completenessScore": -0.0018676095084458888
        },
        "symbols": {"added": 443, "removed": 167}
    },
    {
        "committer_date": "2025-09-02 16:53:55",
        "commit_id": "d6b74568e2c",
        "message": "Revert \"Add __init__.pyi to torch/linalg (#160750)\"",
        "index": "087444",
        "diagnostics": {"added": 42, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -2, "withAmbiguousType": 1},
            "otherSymbolCounts": {"withKnownType": -5, "withUnknownType": -4},
            "missingFunctionDocStringCount": -41,
            "missingClassDocStringCount": -2,
            "completenessScore": -9.995314823946222e-05
        },
        "symbols": {"removed": 10}
    },
    {
        "committer_date": "2025-09-03 02:47:07",
        "commit_id": "d5643e8f3a6",
        "message": "[dynamo, nested graph breaks] support nested graph breaks that cause skipped frames (#160470)",
        "index": "087477",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"missingFunctionDocStringCount": -1},
        "symbols": {}
    },
    {
        "committer_date": "2025-09-03 19:29:00",
        "commit_id": "f4c33cd44ac",
        "message": "[pt2e] Avoid getting model device once per node (#159901)",
        "index": "087513",
        "diagnostics": {"added": 2, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-09-04 00:17:01",
        "commit_id": "3c45af079af",
        "message": "kill allow_complex_guards_as_runtime_asserts (#161794)",
        "index": "087532",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -2},
            "completenessScore": -7.686627917985467e-05
        },
        "symbols": {"removed": 2}
    },
    {
        "committer_date": "2025-09-04 01:09:53",
        "commit_id": "12814701555",
        "message": "[DCP][HuggingFace] Add Support for dequantization of SafeTensors checkpoints (#160682)",
        "index": "087534",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 6, "withUnknownType": 1},
            "missingFunctionDocStringCount": 1,
            "completenessScore": 0.00020743726962585418,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 7}
    },
    {
        "committer_date": "2025-09-04 17:10:17",
        "commit_id": "f36f2859537",
        "message": "[dynamo] change error_on_graph_break/fullgraph semantics (#161747)",
        "index": "087573",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-09-04 21:57:27",
        "commit_id": "0d71a9dd5b4",
        "message": "fix incorrect interaction between DDPOptimizer and donated buffers (#160745)",
        "index": "087600",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 5}, "missingClassDocStringCount": 1},
        "symbols": {"added": 5}
    },
    {
        "committer_date": "2025-09-05 23:21:46",
        "commit_id": "486b20b73cf",
        "message": "Add return-max-scores to flex-attention (#161667)",
        "index": "087659",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 11, "withUnknownType": 3},
            "completenessScore": 0.00035288004811268037
        },
        "symbols": {"added": 14}
    },
    {
        "committer_date": "2025-09-06 20:03:52",
        "commit_id": "047603d35bd",
        "message": "New export implementation with flat inp/out (#162167)",
        "index": "087683",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "otherSymbolCounts": {"withKnownType": 10, "withAmbiguousType": 1},
            "missingClassDocStringCount": 1
        },
        "symbols": {"added": 11}
    },
    {
        "committer_date": "2025-09-07 01:29:54",
        "commit_id": "b919560c4a7",
        "message": "[nativert] AOTI lowering and packaging as NativeRT delegate (#162285)",
        "index": "087691",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 3, "withUnknownType": 7},
            "missingFunctionDocStringCount": 1,
            "missingClassDocStringCount": 2,
            "completenessScore": -4.664635630635683e-05,
            "filesAnalyzed": 3
        },
        "symbols": {"added": 10}
    },
    {
        "committer_date": "2025-09-07 06:00:55",
        "commit_id": "104f2680e03",
        "message": "Revert \"Add return-max-scores to flex-attention (#161667)\"",
        "index": "087695",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": -11, "withUnknownType": -3},
            "completenessScore": -0.0003527032637336558
        },
        "symbols": {"removed": 14}
    },
    {
        "committer_date": "2025-09-07 23:37:31",
        "commit_id": "eb9073a6b71",
        "message": "[easy] [precompile] Convert CompileArtifacts to callable (#162169)",
        "index": "087707",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1, "withUnknownType": -1},
            "completenessScore": 6.147415011986679e-05
        },
        "symbols": {}
    },
    {
        "committer_date": "2025-09-08 21:30:17",
        "commit_id": "fecd9686f54",
        "message": "Graph split event tracker (#159795)",
        "index": "087743",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 12, "withUnknownType": 15},
            "missingFunctionDocStringCount": 1,
            "completenessScore": 0.00011406710781419749
        },
        "symbols": {"added": 27}
    },
    {
        "committer_date": "2025-09-08 22:44:09",
        "commit_id": "711c8c821e8",
        "message": "shape guards (#161178)",
        "index": "087746",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {},
        "symbols": {}
    },
    {
        "committer_date": "2025-09-08 22:44:48",
        "commit_id": "ac9ccd0dc2d",
        "message": "Add return-max-scores to flex-attention (#161667)",
        "index": "087747",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 11, "withUnknownType": 3},
            "completenessScore": 0.00035196862026221076
        },
        "symbols": {"added": 14}
    },
    {
        "committer_date": "2025-09-09 02:42:11",
        "commit_id": "d8b6622bb6a",
        "message": "testing infra and some fixes (#162183)",
        "index": "087763",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": 1}},
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-09-09 05:26:32",
        "commit_id": "60d009267e5",
        "message": "Revert \"testing infra and some fixes (#162183)\"",
        "index": "087775",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {"otherSymbolCounts": {"withKnownType": -1}},
        "symbols": {"removed": 1}
    },
    {
        "committer_date": "2025-09-09 22:23:06",
        "commit_id": "b498299953f",
        "message": "154849 Add support to handle IGUSR1 and SIGUSR2 in multiprocessing (#160690)",
        "index": "087811",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 1},
            "completenessScore": 3.825660108158768e-05
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-09-10 01:40:24",
        "commit_id": "c66e58b7d0d",
        "message": "[ONNX] Expose the testing module (#162495)",
        "index": "087822",
        "diagnostics": {"added": 0, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withUnknownType": 1},
            "completenessScore": -2.306016858133475e-05,
            "filesAnalyzed": 1
        },
        "symbols": {"added": 1}
    },
    {
        "committer_date": "2025-09-10 17:28:02",
        "commit_id": "11e97bc7bd4",
        "message": "[cpp_extension] Add abstract base class to OrderedDictWrapper, and clarify torch.nn.Module typing",
        "index": "087834",
        "diagnostics": {"added": 1, "removed": 0},
        "diff": {
            "exportedSymbolCounts": {"withKnownType": 8, "withUnknownType": -6},
            "completenessScore": 0.00044432463347315876
        },
        "symbols": {"added": 2}
    }
]

