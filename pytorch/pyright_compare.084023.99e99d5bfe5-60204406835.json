{
    "commits": {
        "before": {
            "committer_date": "2025-06-13 06:05:38",
            "id": "99e99d5bfe5",
            "message": "[a2av] Test must allocate tensors symmetrically (#155835)"
        },
        "after": {
            "committer_date": "2025-06-13 06:14:22",
            "id": "60204406835",
            "message": "remove allow-untyped-defs from adaround_fake_quantize.py (#155621)"
        }
    },
    "completenessScore": [0.371455, 0.371579],
    "filename": "full-run/pyright_compare.084023.99e99d5bfe5-60204406835.json",
    "diff": {
        "absolute": {
            "exportedSymbolCounts": {
                "withKnownType": 2,
                "withAmbiguousType": -1,
                "withUnknownType": -1
            },
            "completenessScore": 0.00012383900928791824
        },
        "percent": {
            "exportedSymbolCounts": {
                "withKnownType": 0.03333888981496916,
                "withAmbiguousType": -0.12033694344163658,
                "withUnknownType": -0.01072961373390558
            },
            "completenessScore": 0.03333888981496715
        },
        "symbols": {
            "common": {
                "torch.ao.quantization.experimental.adaround_fake_quantize.AdaroundFakeQuantizer.__init__": {
                    "isTypeKnown": true,
                    "diagnostics": {
                        "removed": [
                            "Type annotation for parameter \"observer\" is missing",
                            "Type annotation for parameter \"observer_kwargs\" is missing",
                            "Type annotation for parameter \"qscheme\" is missing"
                        ]
                    }
                },
                "torch.ao.quantization.experimental.adaround_fake_quantize.AdaroundFakeQuantizer.qscheme": {
                    "isTypeKnown": true,
                    "diagnostics": {
                        "removed": [
                            "Type is missing type annotation and could be inferred differently by type checkers\n\u00a0\u00a0Inferred type is \"qscheme\""
                        ]
                    }
                }
            }
        }
    }
}
